include("SubstructureRanking.jl")
include("StructureVisualisation.jl")
using CSV

function rankbycoevolution(outputprefix, alignmentfile, maxfile, paired::Array{Int,1}, mapping, dataset::Dataset, lambdas::Array{Float64,1}, postprobs::Array{Float64,1})
    outputdir = joinpath(dirname(outputprefix), "ranking/")
    if !isdir(outputdir)
        mkpath(outputdir)
    end
    ret, finalls, texoutput, csv = substructureranking(paired, lambdas, AbstractString[], mapping, nothing, false, false, false)

    try
        fout = open(abspath(joinpath(outputdir,"ranking.csv")), "w")
        write(fout,"Rank,Alignment position,Mapped position,Length,Name,Median coevolution,z-score\n")
        write(fout, csv)
        close(fout)

        template = read(open(joinpath(@__DIR__,"ranking_template.tex"),"r"), String)
        output = replace(template, "#INSERT#" => texoutput)
        texfile = abspath(joinpath(outputdir,"ranking.tex"))
        println("Texfile: ", texfile)
        fout = open(texfile,"w")
        write(fout, output)
        close(fout)

        run(`pdflatex -interaction=nonstopmode -output-directory="$(abspath(joinpath(outputdir)))" $(texfile)`)
    catch e

    end

    images = ["A3.svg", "A3_light.svg","C3.svg", "C3_light.svg","G3.svg", "G3_light.svg","T3.svg", "T3_light.svg","U3.svg", "U3_light.svg"]
    for image in images
        srcfile = abspath(string(@__DIR__,"/../resources/",image))
        destfile = abspath(joinpath(outputdir,image))
        if isfile(srcfile) && !isfile(destfile)
            cp(srcfile, destfile)
        end
    end

    #sequence, dummy = readctfile("/media/michael/Sandisk500GB/data/hiv1-SHAPE-MaP.ct")

    #ctfile = "D:\\Dropbox\\dev\\farce-julia\\src\\mcmc\\hiv1b\\hiv1-SHAPE-MaP.ct"
    #csvfile = "D:\\Dropbox\\Final\\thesis\\thesis\\manuscript\\datasets\\NL4-3 SHAPE reactivities.csv"

    ctfile = "D:\\Dropbox\\dev\\farce-julia\\src\\mcmc\\hiv1b\\hiv1-SHAPE-MaP.ct"
    csvfile = "D:\\Dropbox\\Final\\thesis\\thesis\\manuscript\\datasets\\NL4-3 SHAPE reactivities.csv"


    #shapereactivities,shapeprobs,mapping, revmapping = loadNL43ShapeReactivities2(dataset, alignmentfile, ctfile, csvfile)
    #backdata = shapereactivities
    mapping = Int[i for i=1:length(paired)]
    backdata = zeros(Float64, length(paired))
    textannotations = String["" for i=1:length(paired)]

    #=
    backdata = Float64[1.92464, 1.92464, 1.92464, 3.05447, 3.05447, 3.05447, 3.86478, 3.86478, 3.86478, 5.13272, 5.13272, 5.13272, 2.62632, 2.62632, 2.62632, 2.48625, 2.48625, 2.48625, 1.7675, 1.7675, 1.7675, 3.68054, 3.68054, 3.68054, 0.52024, 0.52024, 0.52024, 0.139547, 0.139547, 0.139547, 1.13891, 1.13891, 1.13891, 1.99854, 1.99854, 1.99854, 1.89188, 1.89188, 1.89188, 1.14329, 1.14329, 1.14329, 2.41297, 2.41297, 2.41297, 3.57441, 3.57441, 3.57441, 1.183, 1.183, 1.183, 0.11255, 0.11255, 0.11255, 2.29401, 2.29401, 2.29401, 2.48307, 2.48307, 2.48307, 2.17742, 2.17742, 2.17742, 2.18756, 2.18756, 2.18756, 2.14542, 2.14542, 2.14542, 2.30481, 2.30481, 2.30481, 2.08394, 2.08394, 2.08394, 2.08394, 2.08394, 2.08394, 2.03967, 2.03967, 2.03967, 2.9698, 2.9698, 2.9698, 1.65016, 1.65016, 1.65016, 2.45723, 2.45723, 2.45723, 2.30481, 2.30481, 2.30481, 2.53204, 2.53204, 2.53204, 2.81402, 2.81402, 2.81402, 3.13168, 3.13168, 3.13168, 2.44918, 2.44918, 2.44918, 2.20685, 2.20685, 2.20685, 2.69487, 2.69487, 2.69487, 2.20685, 2.20685, 2.20685, 2.20846, 2.20846, 2.20846, 5.39529, 5.39529, 5.39529, 3.23597, 3.23597, 3.23597, 0.389074, 0.389074, 0.389074, 2.20846, 2.20846, 2.20846, 2.62131, 2.62131, 2.62131, 2.62131, 2.62131, 2.62131, -5.44185, -5.44185, -5.44185, 2.03967, 2.03967, 2.03967, 2.20685, 2.20685, 2.20685, 2.56951, 2.56951, 2.56951, 2.20685, 2.20685, 2.20685, 2.62131, 2.62131, 2.62131, 2.20846, 2.20846, 2.20846, 0.780034, 0.780034, 0.780034, 2.03646, 2.03646, 2.03646, 5.58619, 5.58619, 5.58619, 4.21434, 4.21434, 4.21434, 2.51064, 2.51064, 2.51064, 1.37274, 1.37274, 1.37274, 2.52747, 2.52747, 2.52747, 2.18756, 2.18756, 2.18756, 1.12116, 1.12116, 1.12116, 0.916801, 0.916801, 0.916801, 3.07328, 3.07328, 3.07328, 2.80373, 2.80373, 2.80373, 3.75679, 3.75679, 3.75679, 1.52665, 1.52665, 1.52665, 0.393399, 0.393399, 0.393399, 2.29401, 2.29401, 2.29401, 2.14542, 2.14542, 2.14542, -2.5515, -2.5515, -2.5515, 3.43342, 3.43342, 3.43342, 2.71178, 2.71178, 2.71178, 2.30481, 2.30481, 2.30481, 3.94111, 3.94111, 3.94111, 2.14542, 2.14542, 2.14542, 2.30481, 2.30481, 2.30481, 3.66291, 3.66291, 3.66291, 0.987435, 0.987435, 0.987435, 5.02258, 5.02258, 5.02258, 2.30481, 2.30481, 2.30481, 2.79351, 2.79351, 2.79351, 2.47728, 2.47728, 2.47728, 2.29151, 2.29151, 2.29151, 2.18756, 2.18756, 2.18756, 2.61849, 2.61849, 2.61849, -3.02614, -3.02614, -3.02614, 2.60845, 2.60845, 2.60845, 2.14542, 2.14542, 2.14542, 3.7911, 3.7911, 3.7911, 2.60845, 2.60845, 2.60845, -3.18136, -3.18136, -3.18136, 3.77282, 3.77282, 3.77282, 3.8387, 3.8387, 3.8387, 2.14542, 2.14542, 2.14542, 2.70741, 2.70741, 2.70741, 2.54626, 2.54626, 2.54626, 2.20846, 2.20846, 2.20846, 2.27663, 2.27663, 2.27663, -3.19534, -3.19534, -3.19534, -6.37565, -6.37565, -6.37565, 2.30481, 2.30481, 2.30481, 1.49526, 1.49526, 1.49526, 2.64279, 2.64279, 2.64279, 3.88183, 3.88183, 3.88183, 2.18756, 2.18756, 2.18756, 2.09981, 2.09981, 2.09981, 2.47728, 2.47728, 2.47728, 2.30481, 2.30481, 2.30481, 2.80358, 2.80358, 2.80358, 2.92365, 2.92365, 2.92365, 2.95979, 2.95979, 2.95979, 2.12905, 2.12905, 2.12905, 1.85826, 1.85826, 1.85826, 2.20846, 2.20846, 2.20846, 0.406316, 0.406316, 0.406316, 2.14542, 2.14542, 2.14542, 2.27663, 2.27663, 2.27663, 2.29151, 2.29151, 2.29151, 3.49695, 3.49695, 3.49695, 3.60922, 3.60922, 3.60922, 2.80819, 2.80819, 2.80819, -1.09788, -1.09788, -1.09788, 2.15175, 2.15175, 2.15175, 2.30481, 2.30481, 2.30481, 2.30481, 2.30481, 2.30481, 2.54715, 2.54715, 2.54715, 2.83932, 2.83932, 2.83932, 2.48307, 2.48307, 2.48307, 2.20846, 2.20846, 2.20846, 2.21169, 2.21169, 2.21169, 2.69453, 2.69453, 2.69453, 3.0001, 3.0001, 3.0001, -1.72436, -1.72436, -1.72436, 2.55948, 2.55948, 2.55948, 2.09981, 2.09981, 2.09981, 2.58119, 2.58119, 2.58119, 4.25987, 4.25987, 4.25987, 5.17078, 5.17078, 5.17078, 3.53347, 3.53347, 3.53347, 2.58721, 2.58721, 2.58721, 3.49656, 3.49656, 3.49656, 2.30481, 2.30481, 2.30481, 27.5653, 27.5653, 27.5653, 2.20685, 2.20685, 2.20685, 3.28864, 3.28864, 3.28864, 2.46814, 2.46814, 2.46814, 2.18756, 2.18756, 2.18756, 1.12495, 1.12495, 1.12495, 2.27662, 2.27662, 2.27662, 5.22211, 5.22211, 5.22211, -1.84377, -1.84377, -1.84377, 7.53178, 7.53178, 7.53178, 2.15175, 2.15175, 2.15175, 2.60845, 2.60845, 2.60845, 2.09981, 2.09981, 2.09981, 2.03967, 2.03967, 2.03967, 2.20846, 2.20846, 2.20846, 1.92465, 1.92465, 1.92465, 3.22997, 3.22997, 3.22997, 2.36139, 2.36139, 2.36139, 2.14542, 2.14542, 2.14542, 2.14542, 2.14542, 2.14542, 2.15175, 2.15175, 2.15175, -3.0864, -3.0864, -3.0864, 1.96497, 1.96497, 1.96497, 1.45721, 1.45721, 1.45721, 2.45921, 2.45921, 2.45921, 1.96656, 1.96656, 1.96656, 1.84604, 1.84604, 1.84604, 2.60845, 2.60845, 2.60845, 2.47728, 2.47728, 2.47728, 3.85811, 3.85811, 3.85811, 3.73486, 3.73486, 3.73486, 2.29584, 2.29584, 2.29584, -7.96927, -7.96927, -7.96927, 2.15175, 2.15175, 2.15175, 2.09981, 2.09981, 2.09981, 0.489875, 0.489875, 0.489875, 2.12905, 2.12905, 2.12905, 2.10226, 2.10226, 2.10226, 3.20123, 3.20123, 3.20123, 3.49144, 3.49144, 3.49144, 2.43711, 2.43711, 2.43711, 2.36177, 2.36177, 2.36177, 2.03967, 2.03967, 2.03967, 0.819088, 0.819088, 0.819088, -1.87925, -1.87925, -1.87925, 2.44502, 2.44502, 2.44502, 2.36139, 2.36139, 2.36139, 2.30481, 2.30481, 2.30481, 0.668897, 0.668897, 0.668897, 2.08394, 2.08394, 2.08394, 2.08394, 2.08394, 2.08394, 2.52469, 2.52469, 2.52469, 0.791314, 0.791314, 0.791314, 2.15175, 2.15175, 2.15175, 3.49011, 3.49011, 3.49011, 6.37869, 6.37869, 6.37869, 2.20846, 2.20846, 2.20846, 2.2915, 2.2915, 2.2915, 4.29346, 4.29346, 4.29346, 2.76559, 2.76559, 2.76559, 2.14542, 2.14542, 2.14542, 2.09981, 2.09981, 2.09981, 2.30481, 2.30481, 2.30481, 1.75352, 1.75352, 1.75352, 2.34795, 2.34795, 2.34795, 4.27241, 4.27241, 4.27241, 2.48307, 2.48307, 2.48307, 4.55278, 4.55278, 4.55278, 0.330945, 0.330945, 0.330945, 2.20685, 2.20685, 2.20685, 2.96134, 2.96134, 2.96134, 6.06736, 6.06736, 6.06736, 2.15175, 2.15175, 2.15175, 2.49504, 2.49504, 2.49504, 0.23808, 0.23808, 0.23808, 2.09981, 2.09981, 2.09981, 3.13287, 3.13287, 3.13287, 2.29151, 2.29151, 2.29151, 2.48344, 2.48344, 2.48344, 2.60845, 2.60845, 2.60845, 2.21793, 2.21793, 2.21793, 2.47728, 2.47728, 2.47728, 2.80648, 2.80648, 2.80648, 3.15852, 3.15852, 3.15852, 3.39357, 3.39357, 3.39357, -2.41351, -2.41351, -2.41351, 2.65849, 2.65849, 2.65849, 2.86058, 2.86058, 2.86058, 2.7803, 2.7803, 2.7803, 2.62131, 2.62131, 2.62131, 2.48911, 2.48911, 2.48911, 2.66053, 2.66053, 2.66053, 3.59069, 3.59069, 3.59069, 5.27787, 5.27787, 5.27787, 2.30481, 2.30481, 2.30481, 2.27663, 2.27663, 2.27663, 2.17742, 2.17742, 2.17742, 2.05058, 2.05058, 2.05058, 2.60845, 2.60845, 2.60845, 2.39167, 2.39167, 2.39167, 2.36139, 2.36139, 2.36139, 0.734595, 0.734595, 0.734595, 4.87342, 4.87342, 4.87342, 2.14542, 2.14542, 2.14542, 0.806909, 0.806909, 0.806909, 3.49282, 3.49282, 3.49282, 2.12905, 2.12905, 2.12905, 2.29401, 2.29401, 2.29401, 2.20685, 2.20685, 2.20685, 1.12605, 1.12605, 1.12605, 2.52827, 2.52827, 2.52827, -2.91221, -2.91221, -2.91221, 0.39692, 0.39692, 0.39692, 2.60845, 2.60845, 2.60845, 2.12905, 2.12905, 2.12905, 2.30481, 2.30481, 2.30481, 2.03967, 2.03967, 2.03967, 2.60845, 2.60845, 2.60845, 3.79513, 3.79513, 3.79513, 2.03967, 2.03967, 2.03967, 2.47728, 2.47728, 2.47728, 2.65749, 2.65749, 2.65749, 2.27663, 2.27663, 2.27663, 0.969234, 0.969234, 0.969234, 2.15175, 2.15175, 2.15175, 2.60845, 2.60845, 2.60845, 1.44792, 1.44792, 1.44792, 3.63954, 3.63954, 3.63954, 2.30481, 2.30481, 2.30481, 1.60246, 1.60246, 1.60246, 2.15175, 2.15175, 2.15175, 9.23571, 9.23571, 9.23571, 2.30481, 2.30481, 2.30481, 0.990395, 0.990395, 0.990395, 2.29151, 2.29151, 2.29151, 2.553, 2.553, 2.553, 5.44572, 5.44572, 5.44572, 2.00413, 2.00413, 2.00413, 0.646494, 0.646494, 0.646494, 0.849852, 0.849852, 0.849852, -1.60266, -1.60266, -1.60266, 1.59486, 1.59486, 1.59486, 3.82558, 3.82558, 3.82558, -2.55248, -2.55248, -2.55248, 8.13589, 8.13589, 8.13589, 2.30481, 2.30481, 2.30481, 1.71982, 1.71982, 1.71982, 2.18756, 2.18756, 2.18756, 0.330874, 0.330874, 0.330874, 2.94793, 2.94793, 2.94793, 2.46855, 2.46855, 2.46855, 2.63344, 2.63344, 2.63344, 2.30481, 2.30481, 2.30481, 2.67191, 2.67191, 2.67191, 2.17742, 2.17742, 2.17742, 2.64147, 2.64147, 2.64147, 1.88576, 1.88576, 1.88576, 1.05614, 1.05614, 1.05614, 2.72022, 2.72022, 2.72022, 2.47728, 2.47728, 2.47728, 2.60845, 2.60845, 2.60845, 2.29151, 2.29151, 2.29151, 2.12905, 2.12905, 2.12905, 2.87427, 2.87427, 2.87427, 0.447211, 0.447211, 0.447211, 0.849999, 0.849999, 0.849999, 2.92343, 2.92343, 2.92343, 0.503387, 0.503387, 0.503387, 1.93626, 1.93626, 1.93626, 2.30481, 2.30481, 2.30481, 5.495, 5.495, 5.495, 2.18756, 2.18756, 2.18756, 2.47728, 2.47728, 2.47728, 3.34084, 3.34084, 3.34084, 2.20843, 2.20843, 2.20843, 2.62131, 2.62131, 2.62131, 3.01863, 3.01863, 3.01863, 2.49404, 2.49404, 2.49404, 2.8354, 2.8354, 2.8354, 2.15175, 2.15175, 2.15175, 2.14542, 2.14542, 2.14542, 1.00022, 1.00022, 1.00022, 2.6776, 2.6776, 2.6776, 2.03967, 2.03967, 2.03967, 2.20685, 2.20685, 2.20685, 2.30481, 2.30481, 2.30481, 1.92467, 1.92467, 1.92467, 0.253103, 0.253103, 0.253103, 2.12905, 2.12905, 2.12905, 2.94535, 2.94535, 2.94535, 3.02347, 3.02347, 3.02347, 2.56512, 2.56512, 2.56512, 10.1072, 10.1072, 10.1072, 2.47728, 2.47728, 2.47728, 2.99033, 2.99033, 2.99033, 0.0, 0.0, 0.0, 3.31213, 3.31213, 3.31213, 2.30481, 2.30481, 2.30481, 2.14542, 2.14542, 2.14542, 2.60845, 2.60845, 2.60845, 2.30481, 2.30481, 2.30481, 2.03967, 2.03967, 2.03967, 2.17742, 2.17742, 2.17742, 2.03967, 2.03967, 2.03967, 2.30481, 2.30481, 2.30481, 3.16476, 3.16476, 3.16476, -1.94135, -1.94135, -1.94135, 3.19486, 3.19486, 3.19486, 2.12905, 2.12905, 2.12905, 2.30481, 2.30481, 2.30481, 2.36139, 2.36139, 2.36139, 2.74721, 2.74721, 2.74721, 2.30481, 2.30481, 2.30481, 3.16624, 3.16624, 3.16624, 1.08914, 1.08914, 1.08914, 3.21445, 3.21445, 3.21445, 2.30481, 2.30481, 2.30481, 2.36139, 2.36139, 2.36139, 2.09981, 2.09981, 2.09981, 2.30481, 2.30481, 2.30481, 2.60845, 2.60845, 2.60845, 4.33238, 4.33238, 4.33238, 2.08394, 2.08394, 2.08394, 2.29151, 2.29151, 2.29151, 2.12905, 2.12905, 2.12905, 2.84596, 2.84596, 2.84596, 2.29151, 2.29151, 2.29151, 2.30481, 2.30481, 2.30481, 2.20846, 2.20846, 2.20846, 2.66048, 2.66048, 2.66048, 0.959405, 0.959405, 0.959405, 2.03967, 2.03967, 2.03967, 2.03967, 2.03967, 2.03967, 2.29401, 2.29401, 2.29401, 2.95723, 2.95723, 2.95723, 2.48307, 2.48307, 2.48307, 2.15175, 2.15175, 2.15175, 2.20685, 2.20685, 2.20685, 2.29151, 2.29151, 2.29151, 2.68073, 2.68073, 2.68073, 2.03967, 2.03967, 2.03967, 3.08931, 3.08931, 3.08931, 5.61927, 5.61927, 5.61927, 2.29151, 2.29151, 2.29151, 1.63694, 1.63694, 1.63694, 2.74684, 2.74684, 2.74684, 3.05563, 3.05563, 3.05563, 2.82806, 2.82806, 2.82806, 2.14542, 2.14542, 2.14542, 2.12905, 2.12905, 2.12905, 2.27663, 2.27663, 2.27663, 2.26813, 2.26813, 2.26813, 2.17742, 2.17742, 2.17742, 0.764546, 0.764546, 0.764546, 2.48307, 2.48307, 2.48307, 2.20685, 2.20685, 2.20685, 2.12905, 2.12905, 2.12905, 2.29151, 2.29151, 2.29151, 2.29151, 2.29151, 2.29151, 2.60845, 2.60845, 2.60845, 16.0637, 16.0637, 16.0637, 3.0601, 3.0601, 3.0601, 3.05061, 3.05061, 3.05061, 3.76104, 3.76104, 3.76104, 3.04317, 3.04317, 3.04317, 2.20846, 2.20846, 2.20846, 2.60845, 2.60845, 2.60845, 4.13288, 4.13288, 4.13288, 2.6148, 2.6148, 2.6148, 0.986333, 0.986333, 0.986333, 2.20846, 2.20846, 2.20846, 5.15865, 5.15865, 5.15865, 2.29151, 2.29151, 2.29151, 2.54097, 2.54097, 2.54097, 2.30481, 2.30481, 2.30481, 2.12905, 2.12905, 2.12905, -2.84127, -2.84127, -2.84127, 2.17742, 2.17742, 2.17742, 2.12905, 2.12905, 2.12905, 2.86682, 2.86682, 2.86682, 2.20685, 2.20685, 2.20685, 2.62868, 2.62868, 2.62868, 2.81412, 2.81412, 2.81412, 2.69796, 2.69796, 2.69796, 2.58367, 2.58367, 2.58367, 2.99882, 2.99882, 2.99882, 2.20846, 2.20846, 2.20846, 3.97851, 3.97851, 3.97851, 2.86695, 2.86695, 2.86695, 2.15175, 2.15175, 2.15175, 2.09981, 2.09981, 2.09981, 2.12905, 2.12905, 2.12905, 2.55773, 2.55773, 2.55773, 2.20846, 2.20846, 2.20846, 3.12184, 3.12184, 3.12184, 2.14542, 2.14542, 2.14542, 6.75577, 6.75577, 6.75577, -2.29434, -2.29434, -2.29434, 2.27243, 2.27243, 2.27243, 3.37245, 3.37245, 3.37245, 2.12905, 2.12905, 2.12905, 2.29151, 2.29151, 2.29151, 2.08394, 2.08394, 2.08394, 2.54662, 2.54662, 2.54662, 2.17742, 2.17742, 2.17742, 2.29401, 2.29401, 2.29401, 2.14542, 2.14542, 2.14542, 1.08894, 1.08894, 1.08894, 2.29401, 2.29401, 2.29401, 2.49917, 2.49917, 2.49917, 2.20846, 2.20846, 2.20846, 2.25708, 2.25708, 2.25708, 1.31674, 1.31674, 1.31674, 3.01574, 3.01574, 3.01574, 2.68261, 2.68261, 2.68261, 3.31062, 3.31062, 3.31062, 3.39204, 3.39204, 3.39204, 2.27663, 2.27663, 2.27663, 2.62131, 2.62131, 2.62131, 1.48254, 1.48254, 1.48254, 0.130756, 0.130756, 0.130756, -2.50202, -2.50202, -2.50202, 2.14542, 2.14542, 2.14542, 2.62962, 2.62962, 2.62962, 2.5384, 2.5384, 2.5384, 2.12905, 2.12905, 2.12905, 2.03967, 2.03967, 2.03967, 2.20846, 2.20846, 2.20846, 2.54693, 2.54693, 2.54693, 2.29401, 2.29401, 2.29401, 2.3048, 2.3048, 2.3048, 2.53465, 2.53465, 2.53465, 2.6574, 2.6574, 2.6574, 2.18756, 2.18756, 2.18756, 2.60845, 2.60845, 2.60845, 2.20846, 2.20846, 2.20846, -3.04977, -3.04977, -3.04977, 3.51193, 3.51193, 3.51193, 2.08394, 2.08394, 2.08394, 2.84654, 2.84654, 2.84654, 2.18756, 2.18756, 2.18756, 2.29401, 2.29401, 2.29401, 1.29858, 1.29858, 1.29858, 2.63438, 2.63438, 2.63438, 2.18756, 2.18756, 2.18756, 2.48123, 2.48123, 2.48123, 0.229622, 0.229622, 0.229622, 2.47297, 2.47297, 2.47297, 2.17742, 2.17742, 2.17742, 2.59626, 2.59626, 2.59626, 2.12905, 2.12905, 2.12905, 2.36506, 2.36506, 2.36506, 2.95616, 2.95616, 2.95616, 2.0998, 2.0998, 2.0998, 3.53251, 3.53251, 3.53251, 2.39202, 2.39202, 2.39202, 2.20764, 2.20764, 2.20764, 3.30275, 3.30275, 3.30275, 2.0998, 2.0998, 2.0998, 3.12675, 3.12675, 3.12675, 5.98875, 5.98875, 5.98875, 2.53842, 2.53842, 2.53842, 0.202901, 0.202901, 0.202901, 1.09004, 1.09004, 1.09004, 2.29151, 2.29151, 2.29151, 2.12905, 2.12905, 2.12905, 2.27663, 2.27663, 2.27663, 2.01479, 2.01479, 2.01479, 5.80005, 5.80005, 5.80005, 2.17742, 2.17742, 2.17742, -1.69048, -1.69048, -1.69048, 2.47727, 2.47727, 2.47727, 3.8464, 3.8464, 3.8464, 3.40923, 3.40923, 3.40923, 2.78037, 2.78037, 2.78037, 3.11962, 3.11962, 3.11962, 2.48224, 2.48224, 2.48224, 2.3048, 2.3048, 2.3048, 2.0998, 2.0998, 2.0998, 2.48307, 2.48307, 2.48307, -1.63698, -1.63698, -1.63698, 0.140327, 0.140327, 0.140327, 2.15945, 2.15945, 2.15945, 2.14541, 2.14541, 2.14541, 2.3614, 2.3614, 2.3614, 2.60845, 2.60845, 2.60845, 2.15175, 2.15175, 2.15175, 2.60845, 2.60845, 2.60845, 2.3048, 2.3048, 2.3048, 2.03967, 2.03967, 2.03967, 2.15175, 2.15175, 2.15175, 3.04525, 3.04525, 3.04525, 3.07507, 3.07507, 3.07507, 1.88339, 1.88339, 1.88339, 2.51941, 2.51941, 2.51941, 2.72909, 2.72909, 2.72909, 2.03967, 2.03967, 2.03967, 2.80008, 2.80008, 2.80008, 0.17931, 0.17931, 0.17931, -1.44226, -1.44226, -1.44226, 2.65881, 2.65881, 2.65881, 2.54851, 2.54851, 2.54851, 5.40027, 5.40027, 5.40027, 2.60845, 2.60845, 2.60845, 1.06384, 1.06384, 1.06384, 2.72654, 2.72654, 2.72654, 0.180068, 0.180068, 0.180068, 4.53823, 4.53823, 4.53823, 2.12904, 2.12904, 2.12904, 2.34841, 2.34841, 2.34841, 2.45092, 2.45092, 2.45092, 2.25077, 2.25077, 2.25077, 3.30003, 3.30003, 3.30003, 2.5296, 2.5296, 2.5296, 2.20681, 2.20681, 2.20681, 2.53324, 2.53324, 2.53324, 2.18751, 2.18751, 2.18751, 2.17739, 2.17739, 2.17739, 0.0, 0.0]
    backdata = (backdata.+10.0)/20.0

    #textannotations = String["AA pos: 1, M: 1.92", "AA pos: 1, M: 1.92", "AA pos: 1, M: 1.92", "AA pos: 2, N: 3.05", "AA pos: 2, N: 3.05", "AA pos: 2, N: 3.05", "AA pos: 3, N: 3.86", "AA pos: 3, N: 3.86", "AA pos: 3, N: 3.86", "AA pos: 4, Q: 5.13", "AA pos: 4, Q: 5.13", "AA pos: 4, Q: 5.13", "AA pos: 5, I: 2.63", "AA pos: 5, I: 2.63", "AA pos: 5, I: 2.63", "AA pos: 6, L: 2.49", "AA pos: 6, L: 2.49", "AA pos: 6, L: 2.49", "AA pos: 7, M: 1.77", "AA pos: 7, M: 1.77", "AA pos: 7, M: 1.77", "AA pos: 8, F: 3.68", "AA pos: 8, F: 3.68", "AA pos: 8, F: 3.68", "AA pos: 9, V: 0.52", "AA pos: 9, V: 0.52", "AA pos: 9, V: 0.52", "AA pos: 10, L: 0.14", "AA pos: 10, L: 0.14", "AA pos: 10, L: 0.14", "AA pos: 11, Y: 1.14", "AA pos: 11, Y: 1.14", "AA pos: 11, Y: 1.14", "AA pos: 12, T: 2.00", "AA pos: 12, T: 2.00", "AA pos: 12, T: 2.00", "AA pos: 13, S: 1.89", "AA pos: 13, S: 1.89", "AA pos: 13, S: 1.89", "AA pos: 14, I: 1.14", "AA pos: 14, I: 1.14", "AA pos: 14, I: 1.14", "AA pos: 15, S: 2.41", "AA pos: 15, S: 2.41", "AA pos: 15, S: 2.41", "AA pos: 16, T: 3.57", "AA pos: 16, T: 3.57", "AA pos: 16, T: 3.57", "AA pos: 17, S: 1.18", "AA pos: 17, S: 1.18", "AA pos: 17, S: 1.18", "AA pos: 18, A: 0.11", "AA pos: 18, A: 0.11", "AA pos: 18, A: 0.11", "AA pos: 19, D: 2.29", "AA pos: 19, D: 2.29", "AA pos: 19, D: 2.29", "AA pos: 20, K: 2.48", "AA pos: 20, K: 2.48", "AA pos: 20, K: 2.48", "AA pos: 21, I: 2.18", "AA pos: 21, I: 2.18", "AA pos: 21, I: 2.18", "AA pos: 22, C: 2.19", "AA pos: 22, C: 2.19", "AA pos: 22, C: 2.19", "AA pos: 23, L: 2.15", "AA pos: 23, L: 2.15", "AA pos: 23, L: 2.15", "AA pos: 24, G: 2.30", "AA pos: 24, G: 2.30", "AA pos: 24, G: 2.30", "AA pos: 25, H: 2.08", "AA pos: 25, H: 2.08", "AA pos: 25, H: 2.08", "AA pos: 26, H: 2.08", "AA pos: 26, H: 2.08", "AA pos: 26, H: 2.08", "AA pos: 27, A: 2.04", "AA pos: 27, A: 2.04", "AA pos: 27, A: 2.04", "AA pos: 28, V: 2.97", "AA pos: 28, V: 2.97", "AA pos: 28, V: 2.97", "AA pos: 29, P: 1.65", "AA pos: 29, P: 1.65", "AA pos: 29, P: 1.65", "AA pos: 30, N: 2.46", "AA pos: 30, N: 2.46", "AA pos: 30, N: 2.46", "AA pos: 31, G: 2.30", "AA pos: 31, G: 2.30", "AA pos: 31, G: 2.30", "AA pos: 32, I: 2.53", "AA pos: 32, I: 2.53", "AA pos: 32, I: 2.53", "AA pos: 33, K: 2.81", "AA pos: 33, K: 2.81", "AA pos: 33, K: 2.81", "AA pos: 34, V: 3.13", "AA pos: 34, V: 3.13", "AA pos: 34, V: 3.13", "AA pos: 35, N: 2.45", "AA pos: 35, N: 2.45", "AA pos: 35, N: 2.45", "AA pos: 36, T: 2.21", "AA pos: 36, T: 2.21", "AA pos: 36, T: 2.21", "AA pos: 37, L: 2.69", "AA pos: 37, L: 2.69", "AA pos: 37, L: 2.69", "AA pos: 38, T: 2.21", "AA pos: 38, T: 2.21", "AA pos: 38, T: 2.21", "AA pos: 39, E: 2.21", "AA pos: 39, E: 2.21", "AA pos: 39, E: 2.21", "AA pos: 40, K: 5.40", "AA pos: 40, K: 5.40", "AA pos: 40, K: 5.40", "AA pos: 41, G: 3.24", "AA pos: 41, G: 3.24", "AA pos: 41, G: 3.24", "AA pos: 42, I: 0.39", "AA pos: 42, I: 0.39", "AA pos: 42, I: 0.39", "AA pos: 43, E: 2.21", "AA pos: 43, E: 2.21", "AA pos: 43, E: 2.21", "AA pos: 44, V: 2.62", "AA pos: 44, V: 2.62", "AA pos: 44, V: 2.62", "AA pos: 45, V: 2.62", "AA pos: 45, V: 2.62", "AA pos: 45, V: 2.62", "AA pos: 46, E: -5.44", "AA pos: 46, E: -5.44", "AA pos: 46, E: -5.44", "AA pos: 47, A: 2.04", "AA pos: 47, A: 2.04", "AA pos: 47, A: 2.04", "AA pos: 48, T: 2.21", "AA pos: 48, T: 2.21", "AA pos: 48, T: 2.21", "AA pos: 49, E: 2.57", "AA pos: 49, E: 2.57", "AA pos: 49, E: 2.57", "AA pos: 50, T: 2.21", "AA pos: 50, T: 2.21", "AA pos: 50, T: 2.21", "AA pos: 51, V: 2.62", "AA pos: 51, V: 2.62", "AA pos: 51, V: 2.62", "AA pos: 52, E: 2.21", "AA pos: 52, E: 2.21", "AA pos: 52, E: 2.21", "AA pos: 53, V: 0.78", "AA pos: 53, V: 0.78", "AA pos: 53, V: 0.78", "AA pos: 54, V: 2.04", "AA pos: 54, V: 2.04", "AA pos: 54, V: 2.04", "AA pos: 55, S: 5.59", "AA pos: 55, S: 5.59", "AA pos: 55, S: 5.59", "AA pos: 56, T: 4.21", "AA pos: 56, T: 4.21", "AA pos: 56, T: 4.21", "AA pos: 57, E: 2.51", "AA pos: 57, E: 2.51", "AA pos: 57, E: 2.51", "AA pos: 58, S: 1.37", "AA pos: 58, S: 1.37", "AA pos: 58, S: 1.37", "AA pos: 59, I: 2.53", "AA pos: 59, I: 2.53", "AA pos: 59, I: 2.53", "AA pos: 60, C: 2.19", "AA pos: 60, C: 2.19", "AA pos: 60, C: 2.19", "AA pos: 61, S: 1.12", "AA pos: 61, S: 1.12", "AA pos: 61, S: 1.12", "AA pos: 62, K: 0.92", "AA pos: 62, K: 0.92", "AA pos: 62, K: 0.92", "AA pos: 63, G: 3.07", "AA pos: 63, G: 3.07", "AA pos: 63, G: 3.07", "AA pos: 64, K: 2.80", "AA pos: 64, K: 2.80", "AA pos: 64, K: 2.80", "AA pos: 65, K: 3.76", "AA pos: 65, K: 3.76", "AA pos: 65, K: 3.76", "AA pos: 66, V: 1.53", "AA pos: 66, V: 1.53", "AA pos: 66, V: 1.53", "AA pos: 67, V: 0.39", "AA pos: 67, V: 0.39", "AA pos: 67, V: 0.39", "AA pos: 68, D: 2.29", "AA pos: 68, D: 2.29", "AA pos: 68, D: 2.29", "AA pos: 69, L: 2.15", "AA pos: 69, L: 2.15", "AA pos: 69, L: 2.15", "AA pos: 70, S: -2.55", "AA pos: 70, S: -2.55", "AA pos: 70, S: -2.55", "AA pos: 71, K: 3.43", "AA pos: 71, K: 3.43", "AA pos: 71, K: 3.43", "AA pos: 72, C: 2.71", "AA pos: 72, C: 2.71", "AA pos: 72, C: 2.71", "AA pos: 73, G: 2.30", "AA pos: 73, G: 2.30", "AA pos: 73, G: 2.30", "AA pos: 74, L: 3.94", "AA pos: 74, L: 3.94", "AA pos: 74, L: 3.94", "AA pos: 75, L: 2.15", "AA pos: 75, L: 2.15", "AA pos: 75, L: 2.15", "AA pos: 76, G: 2.30", "AA pos: 76, G: 2.30", "AA pos: 76, G: 2.30", "AA pos: 77, T: 3.66", "AA pos: 77, T: 3.66", "AA pos: 77, T: 3.66", "AA pos: 78, I: 0.99", "AA pos: 78, I: 0.99", "AA pos: 78, I: 0.99", "AA pos: 79, V: 5.02", "AA pos: 79, V: 5.02", "AA pos: 79, V: 5.02", "AA pos: 80, G: 2.30", "AA pos: 80, G: 2.30", "AA pos: 80, G: 2.30", "AA pos: 81, P: 2.79", "AA pos: 81, P: 2.79", "AA pos: 81, P: 2.79", "AA pos: 82, P: 2.48", "AA pos: 82, P: 2.48", "AA pos: 82, P: 2.48", "AA pos: 83, Q: 2.29", "AA pos: 83, Q: 2.29", "AA pos: 83, Q: 2.29", "AA pos: 84, C: 2.19", "AA pos: 84, C: 2.19", "AA pos: 84, C: 2.19", "AA pos: 85, D: 2.62", "AA pos: 85, D: 2.62", "AA pos: 85, D: 2.62", "AA pos: 86, L: -3.03", "AA pos: 86, L: -3.03", "AA pos: 86, L: -3.03", "AA pos: 87, F: 2.61", "AA pos: 87, F: 2.61", "AA pos: 87, F: 2.61", "AA pos: 88, L: 2.15", "AA pos: 88, L: 2.15", "AA pos: 88, L: 2.15", "AA pos: 89, K: 3.79", "AA pos: 89, K: 3.79", "AA pos: 89, K: 3.79", "AA pos: 90, F: 2.61", "AA pos: 90, F: 2.61", "AA pos: 90, F: 2.61", "AA pos: 91, T: -3.18", "AA pos: 91, T: -3.18", "AA pos: 91, T: -3.18", "AA pos: 92, A: 3.77", "AA pos: 92, A: 3.77", "AA pos: 92, A: 3.77", "AA pos: 93, N: 3.84", "AA pos: 93, N: 3.84", "AA pos: 93, N: 3.84", "AA pos: 94, L: 2.15", "AA pos: 94, L: 2.15", "AA pos: 94, L: 2.15", "AA pos: 95, I: 2.71", "AA pos: 95, I: 2.71", "AA pos: 95, I: 2.71", "AA pos: 96, I: 2.55", "AA pos: 96, I: 2.55", "AA pos: 96, I: 2.55", "AA pos: 97, E: 2.21", "AA pos: 97, E: 2.21", "AA pos: 97, E: 2.21", "AA pos: 98, R: 2.28", "AA pos: 98, R: 2.28", "AA pos: 98, R: 2.28", "AA pos: 99, E: -3.20", "AA pos: 99, E: -3.20", "AA pos: 99, E: -3.20", "AA pos: 100, D: -6.38", "AA pos: 100, D: -6.38", "AA pos: 100, D: -6.38", "AA pos: 101, G: 2.30", "AA pos: 101, G: 2.30", "AA pos: 101, G: 2.30", "AA pos: 102, S: 1.50", "AA pos: 102, S: 1.50", "AA pos: 102, S: 1.50", "AA pos: 103, D: 2.64", "AA pos: 103, D: 2.64", "AA pos: 103, D: 2.64", "AA pos: 104, V: 3.88", "AA pos: 104, V: 3.88", "AA pos: 104, V: 3.88", "AA pos: 105, C: 2.19", "AA pos: 105, C: 2.19", "AA pos: 105, C: 2.19", "AA pos: 106, Y: 2.10", "AA pos: 106, Y: 2.10", "AA pos: 106, Y: 2.10", "AA pos: 107, P: 2.48", "AA pos: 107, P: 2.48", "AA pos: 107, P: 2.48", "AA pos: 108, G: 2.30", "AA pos: 108, G: 2.30", "AA pos: 108, G: 2.30", "AA pos: 109, K: 2.80", "AA pos: 109, K: 2.80", "AA pos: 109, K: 2.80", "AA pos: 110, F: 2.92", "AA pos: 110, F: 2.92", "AA pos: 110, F: 2.92", "AA pos: 111, A: 2.96", "AA pos: 111, A: 2.96", "AA pos: 111, A: 2.96", "AA pos: 112, N: 2.13", "AA pos: 112, N: 2.13", "AA pos: 112, N: 2.13", "AA pos: 113, E: 1.86", "AA pos: 113, E: 1.86", "AA pos: 113, E: 1.86", "AA pos: 114, E: 2.21", "AA pos: 114, E: 2.21", "AA pos: 114, E: 2.21", "AA pos: 115, V: 0.41", "AA pos: 115, V: 0.41", "AA pos: 115, V: 0.41", "AA pos: 116, L: 2.15", "AA pos: 116, L: 2.15", "AA pos: 116, L: 2.15", "AA pos: 117, R: 2.28", "AA pos: 117, R: 2.28", "AA pos: 117, R: 2.28", "AA pos: 118, Q: 2.29", "AA pos: 118, Q: 2.29", "AA pos: 118, Q: 2.29", "AA pos: 119, V: 3.50", "AA pos: 119, V: 3.50", "AA pos: 119, V: 3.50", "AA pos: 120, L: 3.61", "AA pos: 120, L: 3.61", "AA pos: 120, L: 3.61", "AA pos: 121, R: 2.81", "AA pos: 121, R: 2.81", "AA pos: 121, R: 2.81", "AA pos: 122, D: -1.10", "AA pos: 122, D: -1.10", "AA pos: 122, D: -1.10", "AA pos: 123, S: 2.15", "AA pos: 123, S: 2.15", "AA pos: 123, S: 2.15", "AA pos: 124, G: 2.30", "AA pos: 124, G: 2.30", "AA pos: 124, G: 2.30", "AA pos: 125, G: 2.30", "AA pos: 125, G: 2.30", "AA pos: 125, G: 2.30", "AA pos: 126, I: 2.55", "AA pos: 126, I: 2.55", "AA pos: 126, I: 2.55", "AA pos: 127, E: 2.84", "AA pos: 127, E: 2.84", "AA pos: 127, E: 2.84", "AA pos: 128, K: 2.48", "AA pos: 128, K: 2.48", "AA pos: 128, K: 2.48", "AA pos: 129, E: 2.21", "AA pos: 129, E: 2.21", "AA pos: 129, E: 2.21", "AA pos: 130, P: 2.21", "AA pos: 130, P: 2.21", "AA pos: 130, P: 2.21", "AA pos: 131, I: 2.69", "AA pos: 131, I: 2.69", "AA pos: 131, I: 2.69", "AA pos: 132, D: 3.00", "AA pos: 132, D: 3.00", "AA pos: 132, D: 3.00", "AA pos: 133, A: -1.72", "AA pos: 133, A: -1.72", "AA pos: 133, A: -1.72", "AA pos: 134, T: 2.56", "AA pos: 134, T: 2.56", "AA pos: 134, T: 2.56", "AA pos: 135, Y: 2.10", "AA pos: 135, Y: 2.10", "AA pos: 135, Y: 2.10", "AA pos: 136, N: 2.58", "AA pos: 136, N: 2.58", "AA pos: 136, N: 2.58", "AA pos: 137, G: 4.26", "AA pos: 137, G: 4.26", "AA pos: 137, G: 4.26", "AA pos: 138, V: 5.17", "AA pos: 138, V: 5.17", "AA pos: 138, V: 5.17", "AA pos: 139, R: 3.53", "AA pos: 139, R: 3.53", "AA pos: 139, R: 3.53", "AA pos: 140, T: 2.59", "AA pos: 140, T: 2.59", "AA pos: 140, T: 2.59", "AA pos: 141, N: 3.50", "AA pos: 141, N: 3.50", "AA pos: 141, N: 3.50", "AA pos: 142, G: 2.30", "AA pos: 142, G: 2.30", "AA pos: 142, G: 2.30", "AA pos: 143, T: 27.57", "AA pos: 143, T: 27.57", "AA pos: 143, T: 27.57", "AA pos: 144, T: 2.21", "AA pos: 144, T: 2.21", "AA pos: 144, T: 2.21", "AA pos: 145, S: 3.29", "AA pos: 145, S: 3.29", "AA pos: 145, S: 3.29", "AA pos: 146, T: 2.47", "AA pos: 146, T: 2.47", "AA pos: 146, T: 2.47", "AA pos: 147, C: 2.19", "AA pos: 147, C: 2.19", "AA pos: 147, C: 2.19", "AA pos: 148, R: 1.12", "AA pos: 148, R: 1.12", "AA pos: 148, R: 1.12", "AA pos: 149, R: 2.28", "AA pos: 149, R: 2.28", "AA pos: 149, R: 2.28", "AA pos: 150, S: 5.22", "AA pos: 150, S: 5.22", "AA pos: 150, S: 5.22", "AA pos: 151, A: -1.84", "AA pos: 151, A: -1.84", "AA pos: 151, A: -1.84", "AA pos: 152, P: 7.53", "AA pos: 152, P: 7.53", "AA pos: 152, P: 7.53", "AA pos: 153, S: 2.15", "AA pos: 153, S: 2.15", "AA pos: 153, S: 2.15", "AA pos: 154, F: 2.61", "AA pos: 154, F: 2.61", "AA pos: 154, F: 2.61", "AA pos: 155, Y: 2.10", "AA pos: 155, Y: 2.10", "AA pos: 155, Y: 2.10", "AA pos: 156, A: 2.04", "AA pos: 156, A: 2.04", "AA pos: 156, A: 2.04", "AA pos: 157, E: 2.21", "AA pos: 157, E: 2.21", "AA pos: 157, E: 2.21", "AA pos: 158, M: 1.92", "AA pos: 158, M: 1.92", "AA pos: 158, M: 1.92", "AA pos: 159, K: 3.23", "AA pos: 159, K: 3.23", "AA pos: 159, K: 3.23", "AA pos: 160, W: 2.36", "AA pos: 160, W: 2.36", "AA pos: 160, W: 2.36", "AA pos: 161, L: 2.15", "AA pos: 161, L: 2.15", "AA pos: 161, L: 2.15", "AA pos: 162, L: 2.15", "AA pos: 162, L: 2.15", "AA pos: 162, L: 2.15", "AA pos: 163, S: 2.15", "AA pos: 163, S: 2.15", "AA pos: 163, S: 2.15", "AA pos: 164, T: -3.09", "AA pos: 164, T: -3.09", "AA pos: 164, T: -3.09", "AA pos: 165, N: 1.96", "AA pos: 165, N: 1.96", "AA pos: 165, N: 1.96", "AA pos: 166, N: 1.46", "AA pos: 166, N: 1.46", "AA pos: 166, N: 1.46", "AA pos: 167, N: 2.46", "AA pos: 167, N: 2.46", "AA pos: 167, N: 2.46", "AA pos: 168, D: 1.97", "AA pos: 168, D: 1.97", "AA pos: 168, D: 1.97", "AA pos: 169, A: 1.85", "AA pos: 169, A: 1.85", "AA pos: 169, A: 1.85", "AA pos: 170, F: 2.61", "AA pos: 170, F: 2.61", "AA pos: 170, F: 2.61", "AA pos: 171, P: 2.48", "AA pos: 171, P: 2.48", "AA pos: 171, P: 2.48", "AA pos: 172, K: 3.86", "AA pos: 172, K: 3.86", "AA pos: 172, K: 3.86", "AA pos: 173, M: 3.73", "AA pos: 173, M: 3.73", "AA pos: 173, M: 3.73", "AA pos: 174, I: 2.30", "AA pos: 174, I: 2.30", "AA pos: 174, I: 2.30", "AA pos: 175, G: -7.97", "AA pos: 175, G: -7.97", "AA pos: 175, G: -7.97", "AA pos: 176, S: 2.15", "AA pos: 176, S: 2.15", "AA pos: 176, S: 2.15", "AA pos: 177, Y: 2.10", "AA pos: 177, Y: 2.10", "AA pos: 177, Y: 2.10", "AA pos: 178, R: 0.49", "AA pos: 178, R: 0.49", "AA pos: 178, R: 0.49", "AA pos: 179, N: 2.13", "AA pos: 179, N: 2.13", "AA pos: 179, N: 2.13", "AA pos: 180, T: 2.10", "AA pos: 180, T: 2.10", "AA pos: 180, T: 2.10", "AA pos: 181, K: 3.20", "AA pos: 181, K: 3.20", "AA pos: 181, K: 3.20", "AA pos: 182, E: 3.49", "AA pos: 182, E: 3.49", "AA pos: 182, E: 3.49", "AA pos: 183, R: 2.44", "AA pos: 183, R: 2.44", "AA pos: 183, R: 2.44", "AA pos: 184, S: 2.36", "AA pos: 184, S: 2.36", "AA pos: 184, S: 2.36", "AA pos: 185, A: 2.04", "AA pos: 185, A: 2.04", "AA pos: 185, A: 2.04", "AA pos: 186, I: 0.82", "AA pos: 186, I: 0.82", "AA pos: 186, I: 0.82", "AA pos: 187, A: -1.88", "AA pos: 187, A: -1.88", "AA pos: 187, A: -1.88", "AA pos: 188, I: 2.45", "AA pos: 188, I: 2.45", "AA pos: 188, I: 2.45", "AA pos: 189, W: 2.36", "AA pos: 189, W: 2.36", "AA pos: 189, W: 2.36", "AA pos: 190, G: 2.30", "AA pos: 190, G: 2.30", "AA pos: 190, G: 2.30", "AA pos: 191, P: 0.67", "AA pos: 191, P: 0.67", "AA pos: 191, P: 0.67", "AA pos: 192, H: 2.08", "AA pos: 192, H: 2.08", "AA pos: 192, H: 2.08", "AA pos: 193, H: 2.08", "AA pos: 193, H: 2.08", "AA pos: 193, H: 2.08", "AA pos: 194, S: 2.52", "AA pos: 194, S: 2.52", "AA pos: 194, S: 2.52", "AA pos: 195, G: 0.79", "AA pos: 195, G: 0.79", "AA pos: 195, G: 0.79", "AA pos: 196, S: 2.15", "AA pos: 196, S: 2.15", "AA pos: 196, S: 2.15", "AA pos: 197, T: 3.49", "AA pos: 197, T: 3.49", "AA pos: 197, T: 3.49", "AA pos: 198, T: 6.38", "AA pos: 198, T: 6.38", "AA pos: 198, T: 6.38", "AA pos: 199, E: 2.21", "AA pos: 199, E: 2.21", "AA pos: 199, E: 2.21", "AA pos: 200, Q: 2.29", "AA pos: 200, Q: 2.29", "AA pos: 200, Q: 2.29", "AA pos: 201, T: 4.29", "AA pos: 201, T: 4.29", "AA pos: 201, T: 4.29", "AA pos: 202, R: 2.77", "AA pos: 202, R: 2.77", "AA pos: 202, R: 2.77", "AA pos: 203, L: 2.15", "AA pos: 203, L: 2.15", "AA pos: 203, L: 2.15", "AA pos: 204, Y: 2.10", "AA pos: 204, Y: 2.10", "AA pos: 204, Y: 2.10", "AA pos: 205, G: 2.30", "AA pos: 205, G: 2.30", "AA pos: 205, G: 2.30", "AA pos: 206, T: 1.75", "AA pos: 206, T: 1.75", "AA pos: 206, T: 1.75", "AA pos: 207, E: 2.35", "AA pos: 207, E: 2.35", "AA pos: 207, E: 2.35", "AA pos: 208, N: 4.27", "AA pos: 208, N: 4.27", "AA pos: 208, N: 4.27", "AA pos: 209, K: 2.48", "AA pos: 209, K: 2.48", "AA pos: 209, K: 2.48", "AA pos: 210, F: 4.55", "AA pos: 210, F: 4.55", "AA pos: 210, F: 4.55", "AA pos: 211, I: 0.33", "AA pos: 211, I: 0.33", "AA pos: 211, I: 0.33", "AA pos: 212, T: 2.21", "AA pos: 212, T: 2.21", "AA pos: 212, T: 2.21", "AA pos: 213, V: 2.96", "AA pos: 213, V: 2.96", "AA pos: 213, V: 2.96", "AA pos: 214, G: 6.07", "AA pos: 214, G: 6.07", "AA pos: 214, G: 6.07", "AA pos: 215, S: 2.15", "AA pos: 215, S: 2.15", "AA pos: 215, S: 2.15", "AA pos: 216, S: 2.50", "AA pos: 216, S: 2.50", "AA pos: 216, S: 2.50", "AA pos: 217, V: 0.24", "AA pos: 217, V: 0.24", "AA pos: 217, V: 0.24", "AA pos: 218, Y: 2.10", "AA pos: 218, Y: 2.10", "AA pos: 218, Y: 2.10", "AA pos: 219, L: 3.13", "AA pos: 219, L: 3.13", "AA pos: 219, L: 3.13", "AA pos: 220, Q: 2.29", "AA pos: 220, Q: 2.29", "AA pos: 220, Q: 2.29", "AA pos: 221, S: 2.48", "AA pos: 221, S: 2.48", "AA pos: 221, S: 2.48", "AA pos: 222, F: 2.61", "AA pos: 222, F: 2.61", "AA pos: 222, F: 2.61", "AA pos: 223, I: 2.22", "AA pos: 223, I: 2.22", "AA pos: 223, I: 2.22", "AA pos: 224, P: 2.48", "AA pos: 224, P: 2.48", "AA pos: 224, P: 2.48", "AA pos: 225, S: 2.81", "AA pos: 225, S: 2.81", "AA pos: 225, S: 2.81", "AA pos: 226, P: 3.16", "AA pos: 226, P: 3.16", "AA pos: 226, P: 3.16", "AA pos: 227, G: 3.39", "AA pos: 227, G: 3.39", "AA pos: 227, G: 3.39", "AA pos: 228, S: -2.41", "AA pos: 228, S: -2.41", "AA pos: 228, S: -2.41", "AA pos: 229, R: 2.66", "AA pos: 229, R: 2.66", "AA pos: 229, R: 2.66", "AA pos: 230, P: 2.86", "AA pos: 230, P: 2.86", "AA pos: 230, P: 2.86", "AA pos: 231, K: 2.78", "AA pos: 231, K: 2.78", "AA pos: 231, K: 2.78", "AA pos: 232, V: 2.62", "AA pos: 232, V: 2.62", "AA pos: 232, V: 2.62", "AA pos: 233, N: 2.49", "AA pos: 233, N: 2.49", "AA pos: 233, N: 2.49", "AA pos: 234, G: 2.66", "AA pos: 234, G: 2.66", "AA pos: 234, G: 2.66", "AA pos: 235, Q: 3.59", "AA pos: 235, Q: 3.59", "AA pos: 235, Q: 3.59", "AA pos: 236, F: 5.28", "AA pos: 236, F: 5.28", "AA pos: 236, F: 5.28", "AA pos: 237, G: 2.30", "AA pos: 237, G: 2.30", "AA pos: 237, G: 2.30", "AA pos: 238, R: 2.28", "AA pos: 238, R: 2.28", "AA pos: 238, R: 2.28", "AA pos: 239, I: 2.18", "AA pos: 239, I: 2.18", "AA pos: 239, I: 2.18", "AA pos: 240, N: 2.05", "AA pos: 240, N: 2.05", "AA pos: 240, N: 2.05", "AA pos: 241, F: 2.61", "AA pos: 241, F: 2.61", "AA pos: 241, F: 2.61", "AA pos: 242, H: 2.39", "AA pos: 242, H: 2.39", "AA pos: 242, H: 2.39", "AA pos: 243, W: 2.36", "AA pos: 243, W: 2.36", "AA pos: 243, W: 2.36", "AA pos: 244, M: 0.73", "AA pos: 244, M: 0.73", "AA pos: 244, M: 0.73", "AA pos: 245, I: 4.87", "AA pos: 245, I: 4.87", "AA pos: 245, I: 4.87", "AA pos: 246, L: 2.15", "AA pos: 246, L: 2.15", "AA pos: 246, L: 2.15", "AA pos: 247, N: 0.81", "AA pos: 247, N: 0.81", "AA pos: 247, N: 0.81", "AA pos: 248, P: 3.49", "AA pos: 248, P: 3.49", "AA pos: 248, P: 3.49", "AA pos: 249, N: 2.13", "AA pos: 249, N: 2.13", "AA pos: 249, N: 2.13", "AA pos: 250, D: 2.29", "AA pos: 250, D: 2.29", "AA pos: 250, D: 2.29", "AA pos: 251, T: 2.21", "AA pos: 251, T: 2.21", "AA pos: 251, T: 2.21", "AA pos: 252, I: 1.13", "AA pos: 252, I: 1.13", "AA pos: 252, I: 1.13", "AA pos: 253, T: 2.53", "AA pos: 253, T: 2.53", "AA pos: 253, T: 2.53", "AA pos: 254, A: -2.91", "AA pos: 254, A: -2.91", "AA pos: 254, A: -2.91", "AA pos: 255, V: 0.40", "AA pos: 255, V: 0.40", "AA pos: 255, V: 0.40", "AA pos: 256, F: 2.61", "AA pos: 256, F: 2.61", "AA pos: 256, F: 2.61", "AA pos: 257, N: 2.13", "AA pos: 257, N: 2.13", "AA pos: 257, N: 2.13", "AA pos: 258, G: 2.30", "AA pos: 258, G: 2.30", "AA pos: 258, G: 2.30", "AA pos: 259, A: 2.04", "AA pos: 259, A: 2.04", "AA pos: 259, A: 2.04", "AA pos: 260, F: 2.61", "AA pos: 260, F: 2.61", "AA pos: 260, F: 2.61", "AA pos: 261, I: 3.80", "AA pos: 261, I: 3.80", "AA pos: 261, I: 3.80", "AA pos: 262, A: 2.04", "AA pos: 262, A: 2.04", "AA pos: 262, A: 2.04", "AA pos: 263, P: 2.48", "AA pos: 263, P: 2.48", "AA pos: 263, P: 2.48", "AA pos: 264, D: 2.66", "AA pos: 264, D: 2.66", "AA pos: 264, D: 2.66", "AA pos: 265, R: 2.28", "AA pos: 265, R: 2.28", "AA pos: 265, R: 2.28", "AA pos: 266, V: 0.97", "AA pos: 266, V: 0.97", "AA pos: 266, V: 0.97", "AA pos: 267, S: 2.15", "AA pos: 267, S: 2.15", "AA pos: 267, S: 2.15", "AA pos: 268, F: 2.61", "AA pos: 268, F: 2.61", "AA pos: 268, F: 2.61", "AA pos: 269, L: 1.45", "AA pos: 269, L: 1.45", "AA pos: 269, L: 1.45", "AA pos: 270, R: 3.64", "AA pos: 270, R: 3.64", "AA pos: 270, R: 3.64", "AA pos: 271, G: 2.30", "AA pos: 271, G: 2.30", "AA pos: 271, G: 2.30", "AA pos: 272, V: 1.60", "AA pos: 272, V: 1.60", "AA pos: 272, V: 1.60", "AA pos: 273, S: 2.15", "AA pos: 273, S: 2.15", "AA pos: 273, S: 2.15", "AA pos: 274, I: 9.24", "AA pos: 274, I: 9.24", "AA pos: 274, I: 9.24", "AA pos: 275, G: 2.30", "AA pos: 275, G: 2.30", "AA pos: 275, G: 2.30", "AA pos: 276, V: 0.99", "AA pos: 276, V: 0.99", "AA pos: 276, V: 0.99", "AA pos: 277, Q: 2.29", "AA pos: 277, Q: 2.29", "AA pos: 277, Q: 2.29", "AA pos: 278, S: 2.55", "AA pos: 278, S: 2.55", "AA pos: 278, S: 2.55", "AA pos: 279, R: 5.45", "AA pos: 279, R: 5.45", "AA pos: 279, R: 5.45", "AA pos: 280, A: 2.00", "AA pos: 280, A: 2.00", "AA pos: 280, A: 2.00", "AA pos: 281, Q: 0.65", "AA pos: 281, Q: 0.65", "AA pos: 281, Q: 0.65", "AA pos: 282, V: 0.85", "AA pos: 282, V: 0.85", "AA pos: 282, V: 0.85", "AA pos: 283, T: -1.60", "AA pos: 283, T: -1.60", "AA pos: 283, T: -1.60", "AA pos: 284, P: 1.59", "AA pos: 284, P: 1.59", "AA pos: 284, P: 1.59", "AA pos: 285, D: 3.83", "AA pos: 285, D: 3.83", "AA pos: 285, D: 3.83", "AA pos: 286, A: -2.55", "AA pos: 286, A: -2.55", "AA pos: 286, A: -2.55", "AA pos: 287, K: 8.14", "AA pos: 287, K: 8.14", "AA pos: 287, K: 8.14", "AA pos: 288, G: 2.30", "AA pos: 288, G: 2.30", "AA pos: 288, G: 2.30", "AA pos: 289, Y: 1.72", "AA pos: 289, Y: 1.72", "AA pos: 289, Y: 1.72", "AA pos: 290, C: 2.19", "AA pos: 290, C: 2.19", "AA pos: 290, C: 2.19", "AA pos: 291, Y: 0.33", "AA pos: 291, Y: 0.33", "AA pos: 291, Y: 0.33", "AA pos: 292, H: 2.95", "AA pos: 292, H: 2.95", "AA pos: 292, H: 2.95", "AA pos: 293, N: 2.47", "AA pos: 293, N: 2.47", "AA pos: 293, N: 2.47", "AA pos: 294, G: 2.63", "AA pos: 294, G: 2.63", "AA pos: 294, G: 2.63", "AA pos: 295, G: 2.30", "AA pos: 295, G: 2.30", "AA pos: 295, G: 2.30", "AA pos: 296, Q: 2.67", "AA pos: 296, Q: 2.67", "AA pos: 296, Q: 2.67", "AA pos: 297, I: 2.18", "AA pos: 297, I: 2.18", "AA pos: 297, I: 2.18", "AA pos: 298, I: 2.64", "AA pos: 298, I: 2.64", "AA pos: 298, I: 2.64", "AA pos: 299, N: 1.89", "AA pos: 299, N: 1.89", "AA pos: 299, N: 1.89", "AA pos: 300, N: 1.06", "AA pos: 300, N: 1.06", "AA pos: 300, N: 1.06", "AA pos: 301, L: 2.72", "AA pos: 301, L: 2.72", "AA pos: 301, L: 2.72", "AA pos: 302, P: 2.48", "AA pos: 302, P: 2.48", "AA pos: 302, P: 2.48", "AA pos: 303, F: 2.61", "AA pos: 303, F: 2.61", "AA pos: 303, F: 2.61", "AA pos: 304, Q: 2.29", "AA pos: 304, Q: 2.29", "AA pos: 304, Q: 2.29", "AA pos: 305, N: 2.13", "AA pos: 305, N: 2.13", "AA pos: 305, N: 2.13", "AA pos: 306, I: 2.87", "AA pos: 306, I: 2.87", "AA pos: 306, I: 2.87", "AA pos: 307, N: 0.45", "AA pos: 307, N: 0.45", "AA pos: 307, N: 0.45", "AA pos: 308, V: 0.85", "AA pos: 308, V: 0.85", "AA pos: 308, V: 0.85", "AA pos: 309, R: 2.92", "AA pos: 309, R: 2.92", "AA pos: 309, R: 2.92", "AA pos: 310, A: 0.50", "AA pos: 310, A: 0.50", "AA pos: 310, A: 0.50", "AA pos: 311, I: 1.94", "AA pos: 311, I: 1.94", "AA pos: 311, I: 1.94", "AA pos: 312, G: 2.30", "AA pos: 312, G: 2.30", "AA pos: 312, G: 2.30", "AA pos: 313, K: 5.49", "AA pos: 313, K: 5.49", "AA pos: 313, K: 5.49", "AA pos: 314, C: 2.19", "AA pos: 314, C: 2.19", "AA pos: 314, C: 2.19", "AA pos: 315, P: 2.48", "AA pos: 315, P: 2.48", "AA pos: 315, P: 2.48", "AA pos: 316, R: 3.34", "AA pos: 316, R: 3.34", "AA pos: 316, R: 3.34", "AA pos: 317, Y: 2.21", "AA pos: 317, Y: 2.21", "AA pos: 317, Y: 2.21", "AA pos: 318, V: 2.62", "AA pos: 318, V: 2.62", "AA pos: 318, V: 2.62", "AA pos: 319, K: 3.02", "AA pos: 319, K: 3.02", "AA pos: 319, K: 3.02", "AA pos: 320, Q: 2.49", "AA pos: 320, Q: 2.49", "AA pos: 320, Q: 2.49", "AA pos: 321, P: 2.84", "AA pos: 321, P: 2.84", "AA pos: 321, P: 2.84", "AA pos: 322, S: 2.15", "AA pos: 322, S: 2.15", "AA pos: 322, S: 2.15", "AA pos: 323, L: 2.15", "AA pos: 323, L: 2.15", "AA pos: 323, L: 2.15", "AA pos: 324, V: 1.00", "AA pos: 324, V: 1.00", "AA pos: 324, V: 1.00", "AA pos: 325, L: 2.68", "AA pos: 325, L: 2.68", "AA pos: 325, L: 2.68", "AA pos: 326, A: 2.04", "AA pos: 326, A: 2.04", "AA pos: 326, A: 2.04", "AA pos: 327, T: 2.21", "AA pos: 327, T: 2.21", "AA pos: 327, T: 2.21", "AA pos: 328, G: 2.30", "AA pos: 328, G: 2.30", "AA pos: 328, G: 2.30", "AA pos: 329, M: 1.92", "AA pos: 329, M: 1.92", "AA pos: 329, M: 1.92", "AA pos: 330, V: 0.25", "AA pos: 330, V: 0.25", "AA pos: 330, V: 0.25", "AA pos: 331, N: 2.13", "AA pos: 331, N: 2.13", "AA pos: 331, N: 2.13", "AA pos: 332, V: 2.95", "AA pos: 332, V: 2.95", "AA pos: 332, V: 2.95", "AA pos: 333, P: 3.02", "AA pos: 333, P: 3.02", "AA pos: 333, P: 3.02", "AA pos: 334, E: 2.57", "AA pos: 334, E: 2.57", "AA pos: 334, E: 2.57", "AA pos: 335, T: 10.11", "AA pos: 335, T: 10.11", "AA pos: 335, T: 10.11", "AA pos: 336, P: 2.48", "AA pos: 336, P: 2.48", "AA pos: 336, P: 2.48", "AA pos: 337, K: 2.99", "AA pos: 337, K: 2.99", "AA pos: 337, K: 2.99", "", "", "", "AA pos: 338, R: 3.31", "AA pos: 338, R: 3.31", "AA pos: 338, R: 3.31", "AA pos: 339, G: 2.30", "AA pos: 339, G: 2.30", "AA pos: 339, G: 2.30", "AA pos: 340, L: 2.15", "AA pos: 340, L: 2.15", "AA pos: 340, L: 2.15", "AA pos: 341, F: 2.61", "AA pos: 341, F: 2.61", "AA pos: 341, F: 2.61", "AA pos: 342, G: 2.30", "AA pos: 342, G: 2.30", "AA pos: 342, G: 2.30", "AA pos: 343, A: 2.04", "AA pos: 343, A: 2.04", "AA pos: 343, A: 2.04", "AA pos: 344, I: 2.18", "AA pos: 344, I: 2.18", "AA pos: 344, I: 2.18", "AA pos: 345, A: 2.04", "AA pos: 345, A: 2.04", "AA pos: 345, A: 2.04", "AA pos: 346, G: 2.30", "AA pos: 346, G: 2.30", "AA pos: 346, G: 2.30", "AA pos: 347, F: 3.16", "AA pos: 347, F: 3.16", "AA pos: 347, F: 3.16", "AA pos: 348, A: -1.94", "AA pos: 348, A: -1.94", "AA pos: 348, A: -1.94", "AA pos: 349, K: 3.19", "AA pos: 349, K: 3.19", "AA pos: 349, K: 3.19", "AA pos: 350, N: 2.13", "AA pos: 350, N: 2.13", "AA pos: 350, N: 2.13", "AA pos: 351, G: 2.30", "AA pos: 351, G: 2.30", "AA pos: 351, G: 2.30", "AA pos: 352, W: 2.36", "AA pos: 352, W: 2.36", "AA pos: 352, W: 2.36", "AA pos: 353, E: 2.75", "AA pos: 353, E: 2.75", "AA pos: 353, E: 2.75", "AA pos: 354, G: 2.30", "AA pos: 354, G: 2.30", "AA pos: 354, G: 2.30", "AA pos: 355, L: 3.17", "AA pos: 355, L: 3.17", "AA pos: 355, L: 3.17", "AA pos: 356, I: 1.09", "AA pos: 356, I: 1.09", "AA pos: 356, I: 1.09", "AA pos: 357, D: 3.21", "AA pos: 357, D: 3.21", "AA pos: 357, D: 3.21", "AA pos: 358, G: 2.30", "AA pos: 358, G: 2.30", "AA pos: 358, G: 2.30", "AA pos: 359, W: 2.36", "AA pos: 359, W: 2.36", "AA pos: 359, W: 2.36", "AA pos: 360, Y: 2.10", "AA pos: 360, Y: 2.10", "AA pos: 360, Y: 2.10", "AA pos: 361, G: 2.30", "AA pos: 361, G: 2.30", "AA pos: 361, G: 2.30", "AA pos: 362, F: 2.61", "AA pos: 362, F: 2.61", "AA pos: 362, F: 2.61", "AA pos: 363, R: 4.33", "AA pos: 363, R: 4.33", "AA pos: 363, R: 4.33", "AA pos: 364, H: 2.08", "AA pos: 364, H: 2.08", "AA pos: 364, H: 2.08", "AA pos: 365, Q: 2.29", "AA pos: 365, Q: 2.29", "AA pos: 365, Q: 2.29", "AA pos: 366, N: 2.13", "AA pos: 366, N: 2.13", "AA pos: 366, N: 2.13", "AA pos: 367, A: 2.85", "AA pos: 367, A: 2.85", "AA pos: 367, A: 2.85", "AA pos: 368, Q: 2.29", "AA pos: 368, Q: 2.29", "AA pos: 368, Q: 2.29", "AA pos: 369, G: 2.30", "AA pos: 369, G: 2.30", "AA pos: 369, G: 2.30", "AA pos: 370, E: 2.21", "AA pos: 370, E: 2.21", "AA pos: 370, E: 2.21", "AA pos: 371, G: 2.66", "AA pos: 371, G: 2.66", "AA pos: 371, G: 2.66", "AA pos: 372, I: 0.96", "AA pos: 372, I: 0.96", "AA pos: 372, I: 0.96", "AA pos: 373, A: 2.04", "AA pos: 373, A: 2.04", "AA pos: 373, A: 2.04", "AA pos: 374, A: 2.04", "AA pos: 374, A: 2.04", "AA pos: 374, A: 2.04", "AA pos: 375, D: 2.29", "AA pos: 375, D: 2.29", "AA pos: 375, D: 2.29", "AA pos: 376, Y: 2.96", "AA pos: 376, Y: 2.96", "AA pos: 376, Y: 2.96", "AA pos: 377, K: 2.48", "AA pos: 377, K: 2.48", "AA pos: 377, K: 2.48", "AA pos: 378, S: 2.15", "AA pos: 378, S: 2.15", "AA pos: 378, S: 2.15", "AA pos: 379, T: 2.21", "AA pos: 379, T: 2.21", "AA pos: 379, T: 2.21", "AA pos: 380, Q: 2.29", "AA pos: 380, Q: 2.29", "AA pos: 380, Q: 2.29", "AA pos: 381, S: 2.68", "AA pos: 381, S: 2.68", "AA pos: 381, S: 2.68", "AA pos: 382, A: 2.04", "AA pos: 382, A: 2.04", "AA pos: 382, A: 2.04", "AA pos: 383, I: 3.09", "AA pos: 383, I: 3.09", "AA pos: 383, I: 3.09", "AA pos: 384, N: 5.62", "AA pos: 384, N: 5.62", "AA pos: 384, N: 5.62", "AA pos: 385, Q: 2.29", "AA pos: 385, Q: 2.29", "AA pos: 385, Q: 2.29", "AA pos: 386, V: 1.64", "AA pos: 386, V: 1.64", "AA pos: 386, V: 1.64", "AA pos: 387, T: 2.75", "AA pos: 387, T: 2.75", "AA pos: 387, T: 2.75", "AA pos: 388, G: 3.06", "AA pos: 388, G: 3.06", "AA pos: 388, G: 3.06", "AA pos: 389, K: 2.83", "AA pos: 389, K: 2.83", "AA pos: 389, K: 2.83", "AA pos: 390, L: 2.15", "AA pos: 390, L: 2.15", "AA pos: 390, L: 2.15", "AA pos: 391, N: 2.13", "AA pos: 391, N: 2.13", "AA pos: 391, N: 2.13", "AA pos: 392, R: 2.28", "AA pos: 392, R: 2.28", "AA pos: 392, R: 2.28", "AA pos: 393, I: 2.27", "AA pos: 393, I: 2.27", "AA pos: 393, I: 2.27", "AA pos: 394, I: 2.18", "AA pos: 394, I: 2.18", "AA pos: 394, I: 2.18", "AA pos: 395, A: 0.76", "AA pos: 395, A: 0.76", "AA pos: 395, A: 0.76", "AA pos: 396, K: 2.48", "AA pos: 396, K: 2.48", "AA pos: 396, K: 2.48", "AA pos: 397, T: 2.21", "AA pos: 397, T: 2.21", "AA pos: 397, T: 2.21", "AA pos: 398, N: 2.13", "AA pos: 398, N: 2.13", "AA pos: 398, N: 2.13", "AA pos: 399, Q: 2.29", "AA pos: 399, Q: 2.29", "AA pos: 399, Q: 2.29", "AA pos: 400, Q: 2.29", "AA pos: 400, Q: 2.29", "AA pos: 400, Q: 2.29", "AA pos: 401, F: 2.61", "AA pos: 401, F: 2.61", "AA pos: 401, F: 2.61", "AA pos: 402, K: 16.06", "AA pos: 402, K: 16.06", "AA pos: 402, K: 16.06", "AA pos: 403, L: 3.06", "AA pos: 403, L: 3.06", "AA pos: 403, L: 3.06", "AA pos: 404, I: 3.05", "AA pos: 404, I: 3.05", "AA pos: 404, I: 3.05", "AA pos: 405, D: 3.76", "AA pos: 405, D: 3.76", "AA pos: 405, D: 3.76", "AA pos: 406, N: 3.04", "AA pos: 406, N: 3.04", "AA pos: 406, N: 3.04", "AA pos: 407, E: 2.21", "AA pos: 407, E: 2.21", "AA pos: 407, E: 2.21", "AA pos: 408, F: 2.61", "AA pos: 408, F: 2.61", "AA pos: 408, F: 2.61", "AA pos: 409, I: 4.13", "AA pos: 409, I: 4.13", "AA pos: 409, I: 4.13", "AA pos: 410, E: 2.61", "AA pos: 410, E: 2.61", "AA pos: 410, E: 2.61", "AA pos: 411, F: 0.99", "AA pos: 411, F: 0.99", "AA pos: 411, F: 0.99", "AA pos: 412, E: 2.21", "AA pos: 412, E: 2.21", "AA pos: 412, E: 2.21", "AA pos: 413, R: 5.16", "AA pos: 413, R: 5.16", "AA pos: 413, R: 5.16", "AA pos: 414, Q: 2.29", "AA pos: 414, Q: 2.29", "AA pos: 414, Q: 2.29", "AA pos: 415, I: 2.54", "AA pos: 415, I: 2.54", "AA pos: 415, I: 2.54", "AA pos: 416, G: 2.30", "AA pos: 416, G: 2.30", "AA pos: 416, G: 2.30", "AA pos: 417, N: 2.13", "AA pos: 417, N: 2.13", "AA pos: 417, N: 2.13", "AA pos: 418, E: -2.84", "AA pos: 418, E: -2.84", "AA pos: 418, E: -2.84", "AA pos: 419, I: 2.18", "AA pos: 419, I: 2.18", "AA pos: 419, I: 2.18", "AA pos: 420, N: 2.13", "AA pos: 420, N: 2.13", "AA pos: 420, N: 2.13", "AA pos: 421, W: 2.87", "AA pos: 421, W: 2.87", "AA pos: 421, W: 2.87", "AA pos: 422, T: 2.21", "AA pos: 422, T: 2.21", "AA pos: 422, T: 2.21", "AA pos: 423, R: 2.63", "AA pos: 423, R: 2.63", "AA pos: 423, R: 2.63", "AA pos: 424, D: 2.81", "AA pos: 424, D: 2.81", "AA pos: 424, D: 2.81", "AA pos: 425, S: 2.70", "AA pos: 425, S: 2.70", "AA pos: 425, S: 2.70", "AA pos: 426, M: 2.58", "AA pos: 426, M: 2.58", "AA pos: 426, M: 2.58", "AA pos: 427, A: 3.00", "AA pos: 427, A: 3.00", "AA pos: 427, A: 3.00", "AA pos: 428, E: 2.21", "AA pos: 428, E: 2.21", "AA pos: 428, E: 2.21", "AA pos: 429, I: 3.98", "AA pos: 429, I: 3.98", "AA pos: 429, I: 3.98", "AA pos: 430, W: 2.87", "AA pos: 430, W: 2.87", "AA pos: 430, W: 2.87", "AA pos: 431, S: 2.15", "AA pos: 431, S: 2.15", "AA pos: 431, S: 2.15", "AA pos: 432, Y: 2.10", "AA pos: 432, Y: 2.10", "AA pos: 432, Y: 2.10", "AA pos: 433, N: 2.13", "AA pos: 433, N: 2.13", "AA pos: 433, N: 2.13", "AA pos: 434, A: 2.56", "AA pos: 434, A: 2.56", "AA pos: 434, A: 2.56", "AA pos: 435, E: 2.21", "AA pos: 435, E: 2.21", "AA pos: 435, E: 2.21", "AA pos: 436, L: 3.12", "AA pos: 436, L: 3.12", "AA pos: 436, L: 3.12", "AA pos: 437, L: 2.15", "AA pos: 437, L: 2.15", "AA pos: 437, L: 2.15", "AA pos: 438, I: 6.76", "AA pos: 438, I: 6.76", "AA pos: 438, I: 6.76", "AA pos: 439, T: -2.29", "AA pos: 439, T: -2.29", "AA pos: 439, T: -2.29", "AA pos: 440, M: 2.27", "AA pos: 440, M: 2.27", "AA pos: 440, M: 2.27", "AA pos: 441, E: 3.37", "AA pos: 441, E: 3.37", "AA pos: 441, E: 3.37", "AA pos: 442, N: 2.13", "AA pos: 442, N: 2.13", "AA pos: 442, N: 2.13", "AA pos: 443, Q: 2.29", "AA pos: 443, Q: 2.29", "AA pos: 443, Q: 2.29", "AA pos: 444, H: 2.08", "AA pos: 444, H: 2.08", "AA pos: 444, H: 2.08", "AA pos: 445, T: 2.55", "AA pos: 445, T: 2.55", "AA pos: 445, T: 2.55", "AA pos: 446, I: 2.18", "AA pos: 446, I: 2.18", "AA pos: 446, I: 2.18", "AA pos: 447, D: 2.29", "AA pos: 447, D: 2.29", "AA pos: 447, D: 2.29", "AA pos: 448, L: 2.15", "AA pos: 448, L: 2.15", "AA pos: 448, L: 2.15", "AA pos: 449, T: 1.09", "AA pos: 449, T: 1.09", "AA pos: 449, T: 1.09", "AA pos: 450, D: 2.29", "AA pos: 450, D: 2.29", "AA pos: 450, D: 2.29", "AA pos: 451, S: 2.50", "AA pos: 451, S: 2.50", "AA pos: 451, S: 2.50", "AA pos: 452, E: 2.21", "AA pos: 452, E: 2.21", "AA pos: 452, E: 2.21", "AA pos: 453, M: 2.26", "AA pos: 453, M: 2.26", "AA pos: 453, M: 2.26", "AA pos: 454, D: 1.32", "AA pos: 454, D: 1.32", "AA pos: 454, D: 1.32", "AA pos: 455, K: 3.02", "AA pos: 455, K: 3.02", "AA pos: 455, K: 3.02", "AA pos: 456, L: 2.68", "AA pos: 456, L: 2.68", "AA pos: 456, L: 2.68", "AA pos: 457, Y: 3.31", "AA pos: 457, Y: 3.31", "AA pos: 457, Y: 3.31", "AA pos: 458, K: 3.39", "AA pos: 458, K: 3.39", "AA pos: 458, K: 3.39", "AA pos: 459, R: 2.28", "AA pos: 459, R: 2.28", "AA pos: 459, R: 2.28", "AA pos: 460, V: 2.62", "AA pos: 460, V: 2.62", "AA pos: 460, V: 2.62", "AA pos: 461, F: 1.48", "AA pos: 461, F: 1.48", "AA pos: 461, F: 1.48", "AA pos: 462, R: 0.13", "AA pos: 462, R: 0.13", "AA pos: 462, R: 0.13", "AA pos: 463, A: -2.50", "AA pos: 463, A: -2.50", "AA pos: 463, A: -2.50", "AA pos: 464, L: 2.15", "AA pos: 464, L: 2.15", "AA pos: 464, L: 2.15", "AA pos: 465, R: 2.63", "AA pos: 465, R: 2.63", "AA pos: 465, R: 2.63", "AA pos: 466, E: 2.54", "AA pos: 466, E: 2.54", "AA pos: 466, E: 2.54", "AA pos: 467, N: 2.13", "AA pos: 467, N: 2.13", "AA pos: 467, N: 2.13", "AA pos: 468, A: 2.04", "AA pos: 468, A: 2.04", "AA pos: 468, A: 2.04", "AA pos: 469, E: 2.21", "AA pos: 469, E: 2.21", "AA pos: 469, E: 2.21", "AA pos: 470, E: 2.55", "AA pos: 470, E: 2.55", "AA pos: 470, E: 2.55", "AA pos: 471, D: 2.29", "AA pos: 471, D: 2.29", "AA pos: 471, D: 2.29", "AA pos: 472, G: 2.30", "AA pos: 472, G: 2.30", "AA pos: 472, G: 2.30", "AA pos: 473, T: 2.53", "AA pos: 473, T: 2.53", "AA pos: 473, T: 2.53", "AA pos: 474, G: 2.66", "AA pos: 474, G: 2.66", "AA pos: 474, G: 2.66", "AA pos: 475, C: 2.19", "AA pos: 475, C: 2.19", "AA pos: 475, C: 2.19", "AA pos: 476, F: 2.61", "AA pos: 476, F: 2.61", "AA pos: 476, F: 2.61", "AA pos: 477, E: 2.21", "AA pos: 477, E: 2.21", "AA pos: 477, E: 2.21", "AA pos: 478, A: -3.05", "AA pos: 478, A: -3.05", "AA pos: 478, A: -3.05", "AA pos: 479, F: 3.51", "AA pos: 479, F: 3.51", "AA pos: 479, F: 3.51", "AA pos: 480, H: 2.08", "AA pos: 480, H: 2.08", "AA pos: 480, H: 2.08", "AA pos: 481, K: 2.85", "AA pos: 481, K: 2.85", "AA pos: 481, K: 2.85", "AA pos: 482, C: 2.19", "AA pos: 482, C: 2.19", "AA pos: 482, C: 2.19", "AA pos: 483, D: 2.29", "AA pos: 483, D: 2.29", "AA pos: 483, D: 2.29", "AA pos: 484, N: 1.30", "AA pos: 484, N: 1.30", "AA pos: 484, N: 1.30", "AA pos: 485, N: 2.63", "AA pos: 485, N: 2.63", "AA pos: 485, N: 2.63", "AA pos: 486, C: 2.19", "AA pos: 486, C: 2.19", "AA pos: 486, C: 2.19", "AA pos: 487, M: 2.48", "AA pos: 487, M: 2.48", "AA pos: 487, M: 2.48", "AA pos: 488, A: 0.23", "AA pos: 488, A: 0.23", "AA pos: 488, A: 0.23", "AA pos: 489, S: 2.47", "AA pos: 489, S: 2.47", "AA pos: 489, S: 2.47", "AA pos: 490, I: 2.18", "AA pos: 490, I: 2.18", "AA pos: 490, I: 2.18", "AA pos: 491, R: 2.60", "AA pos: 491, R: 2.60", "AA pos: 491, R: 2.60", "AA pos: 492, N: 2.13", "AA pos: 492, N: 2.13", "AA pos: 492, N: 2.13", "AA pos: 493, S: 2.37", "AA pos: 493, S: 2.37", "AA pos: 493, S: 2.37", "AA pos: 494, T: 2.96", "AA pos: 494, T: 2.96", "AA pos: 494, T: 2.96", "AA pos: 495, Y: 2.10", "AA pos: 495, Y: 2.10", "AA pos: 495, Y: 2.10", "AA pos: 496, D: 3.53", "AA pos: 496, D: 3.53", "AA pos: 496, D: 3.53", "AA pos: 497, H: 2.39", "AA pos: 497, H: 2.39", "AA pos: 497, H: 2.39", "AA pos: 498, N: 2.21", "AA pos: 498, N: 2.21", "AA pos: 498, N: 2.21", "AA pos: 499, N: 3.30", "AA pos: 499, N: 3.30", "AA pos: 499, N: 3.30", "AA pos: 500, Y: 2.10", "AA pos: 500, Y: 2.10", "AA pos: 500, Y: 2.10", "AA pos: 501, R: 3.13", "AA pos: 501, R: 3.13", "AA pos: 501, R: 3.13", "AA pos: 502, A: 5.99", "AA pos: 502, A: 5.99", "AA pos: 502, A: 5.99", "AA pos: 503, E: 2.54", "AA pos: 503, E: 2.54", "AA pos: 503, E: 2.54", "AA pos: 504, A: 0.20", "AA pos: 504, A: 0.20", "AA pos: 504, A: 0.20", "AA pos: 505, I: 1.09", "AA pos: 505, I: 1.09", "AA pos: 505, I: 1.09", "AA pos: 506, Q: 2.29", "AA pos: 506, Q: 2.29", "AA pos: 506, Q: 2.29", "AA pos: 507, N: 2.13", "AA pos: 507, N: 2.13", "AA pos: 507, N: 2.13", "AA pos: 508, R: 2.28", "AA pos: 508, R: 2.28", "AA pos: 508, R: 2.28", "AA pos: 509, M: 2.01", "AA pos: 509, M: 2.01", "AA pos: 509, M: 2.01", "AA pos: 510, Q: 5.80", "AA pos: 510, Q: 5.80", "AA pos: 510, Q: 5.80", "AA pos: 511, I: 2.18", "AA pos: 511, I: 2.18", "AA pos: 511, I: 2.18", "AA pos: 512, S: -1.69", "AA pos: 512, S: -1.69", "AA pos: 512, S: -1.69", "AA pos: 513, P: 2.48", "AA pos: 513, P: 2.48", "AA pos: 513, P: 2.48", "AA pos: 514, V: 3.85", "AA pos: 514, V: 3.85", "AA pos: 514, V: 3.85", "AA pos: 515, K: 3.41", "AA pos: 515, K: 3.41", "AA pos: 515, K: 3.41", "AA pos: 516, Q: 2.78", "AA pos: 516, Q: 2.78", "AA pos: 516, Q: 2.78", "AA pos: 517, S: 3.12", "AA pos: 517, S: 3.12", "AA pos: 517, S: 3.12", "AA pos: 518, S: 2.48", "AA pos: 518, S: 2.48", "AA pos: 518, S: 2.48", "AA pos: 519, G: 2.30", "AA pos: 519, G: 2.30", "AA pos: 519, G: 2.30", "AA pos: 520, Y: 2.10", "AA pos: 520, Y: 2.10", "AA pos: 520, Y: 2.10", "AA pos: 521, K: 2.48", "AA pos: 521, K: 2.48", "AA pos: 521, K: 2.48", "AA pos: 522, T: -1.64", "AA pos: 522, T: -1.64", "AA pos: 522, T: -1.64", "AA pos: 523, V: 0.14", "AA pos: 523, V: 0.14", "AA pos: 523, V: 0.14", "AA pos: 524, V: 2.16", "AA pos: 524, V: 2.16", "AA pos: 524, V: 2.16", "AA pos: 525, L: 2.15", "AA pos: 525, L: 2.15", "AA pos: 525, L: 2.15", "AA pos: 526, W: 2.36", "AA pos: 526, W: 2.36", "AA pos: 526, W: 2.36", "AA pos: 527, F: 2.61", "AA pos: 527, F: 2.61", "AA pos: 527, F: 2.61", "AA pos: 528, S: 2.15", "AA pos: 528, S: 2.15", "AA pos: 528, S: 2.15", "AA pos: 529, F: 2.61", "AA pos: 529, F: 2.61", "AA pos: 529, F: 2.61", "AA pos: 530, G: 2.30", "AA pos: 530, G: 2.30", "AA pos: 530, G: 2.30", "AA pos: 531, A: 2.04", "AA pos: 531, A: 2.04", "AA pos: 531, A: 2.04", "AA pos: 532, S: 2.15", "AA pos: 532, S: 2.15", "AA pos: 532, S: 2.15", "AA pos: 533, C: 3.05", "AA pos: 533, C: 3.05", "AA pos: 533, C: 3.05", "AA pos: 534, F: 3.08", "AA pos: 534, F: 3.08", "AA pos: 534, F: 3.08", "AA pos: 535, I: 1.88", "AA pos: 535, I: 1.88", "AA pos: 535, I: 1.88", "AA pos: 536, L: 2.52", "AA pos: 536, L: 2.52", "AA pos: 536, L: 2.52", "AA pos: 537, L: 2.73", "AA pos: 537, L: 2.73", "AA pos: 537, L: 2.73", "AA pos: 538, A: 2.04", "AA pos: 538, A: 2.04", "AA pos: 538, A: 2.04", "AA pos: 539, I: 2.80", "AA pos: 539, I: 2.80", "AA pos: 539, I: 2.80", "AA pos: 540, V: 0.18", "AA pos: 540, V: 0.18", "AA pos: 540, V: 0.18", "AA pos: 541, L: -1.44", "AA pos: 541, L: -1.44", "AA pos: 541, L: -1.44", "AA pos: 542, G: 2.66", "AA pos: 542, G: 2.66", "AA pos: 542, G: 2.66", "AA pos: 543, L: 2.55", "AA pos: 543, L: 2.55", "AA pos: 543, L: 2.55", "AA pos: 544, V: 5.40", "AA pos: 544, V: 5.40", "AA pos: 544, V: 5.40", "AA pos: 545, F: 2.61", "AA pos: 545, F: 2.61", "AA pos: 545, F: 2.61", "AA pos: 546, I: 1.06", "AA pos: 546, I: 1.06", "AA pos: 546, I: 1.06", "AA pos: 547, C: 2.73", "AA pos: 547, C: 2.73", "AA pos: 547, C: 2.73", "AA pos: 548, V: 0.18", "AA pos: 548, V: 0.18", "AA pos: 548, V: 0.18", "AA pos: 549, R: 4.54", "AA pos: 549, R: 4.54", "AA pos: 549, R: 4.54", "AA pos: 550, N: 2.13", "AA pos: 550, N: 2.13", "AA pos: 550, N: 2.13", "AA pos: 551, E: 2.35", "AA pos: 551, E: 2.35", "AA pos: 551, E: 2.35", "AA pos: 552, N: 2.45", "AA pos: 552, N: 2.45", "AA pos: 552, N: 2.45", "AA pos: 553, M: 2.25", "AA pos: 553, M: 2.25", "AA pos: 553, M: 2.25", "AA pos: 554, R: 3.30", "AA pos: 554, R: 3.30", "AA pos: 554, R: 3.30", "AA pos: 555, C: 2.53", "AA pos: 555, C: 2.53", "AA pos: 555, C: 2.53", "AA pos: 556, T: 2.21", "AA pos: 556, T: 2.21", "AA pos: 556, T: 2.21", "AA pos: 557, I: 2.53", "AA pos: 557, I: 2.53", "AA pos: 557, I: 2.53", "AA pos: 558, C: 2.19", "AA pos: 558, C: 2.19", "AA pos: 558, C: 2.19", "AA pos: 559, I: 2.18", "AA pos: 559, I: 2.18", "AA pos: 559, I: 2.18", "", ""]
    =#

    rank = 1
    for sub in finalls
        startpos = sub[3]
        endpos = sub[4]
        len = endpos - startpos + 1
        substructure = paired[startpos:endpos]
        for i=1:length(substructure)
            if substructure[i] > 0
                substructure[i] = substructure[i] - startpos + 1
                if substructure[i] < 0 || substructure[i] > len
                    substructure[i] = 0
                end
            end
        end

        data = zeros(Float64, size(dataset.data,1), len, 4)
        for i=1:size(data,1)
            for j=1:len
                for k=1:4
                    data[i,j,k] = dataset.data[i, j+startpos-1,k]
                end
            end
        end

        drawsubstructure(startpos, dataset, alignmentfile, joinpath(outputdir, string(startpos,"-",endpos,".rank", rank,"of",length(finalls),".svg")), data, dataset.gapfrequency[startpos:endpos], substructure, backdata[startpos:endpos], lambdas[startpos:endpos], postprobs[startpos:endpos], mapping, false,Int[],textannotations[startpos:endpos])
        rank += 1
    end

    drawsubstructure(1, dataset, alignmentfile, abspath(joinpath(outputdir,"splayedstructure.svg")), dataset.data, dataset.gapfrequency, paired, backdata, lambdas, postprobs, mapping, true, Int[], textannotations)
    #drawsplayedstructure(abspath(joinpath(outputdir,"splayedstructure.svg")), dataset, paired, backdata, lambdas, zeros(Float64,length(paired)), mapping)
end

function drawsubstructure(startpos::Int, dataset, alignmentfile, outfile, data::Array{Float64,3}, gapfrequency::Array{Float64,1}, paired::Array{Int,1}, backvalues::Array{Float64,1}, linkvalues::Array{Float64,1}, linkvalues2::Array{Float64,1}, mapping, dosplaystructure::Bool=false, visible::Array{Int,1}=Int[], textannotations::Array{String,1}=String[])
  maxcoevolutionvalue = 10.0

  ylgnbu = reverse([[1.0,1.0,0.85],[0.93,0.98,0.71],[0.78,0.91,0.71],[0.50,0.80,0.73],[0.27,0.71,0.76],[0.15,0.56,0.74],[0.15,0.37,0.64],[0.16,0.22,0.56],[0.06,0.14,0.34]])

  shapecolors = [(0,0,0,1.0),(0,0,0,1.0),  (33,177,79,1.0),(33,177,79,1.0),  (250,200,36,1.0),(250,200,36,1.0), (244,23,28,1.0),(244,23,28,1.0),(244,23,28,1.0)]
  shapepositions = [0.0, 0.3, 0.3, 0.4, 0.4, 0.6, 0.6, 1.0]
  shapegradient = ColorGradient(shapecolors, shapepositions)

  #linkgradient =  viridisgradient(ylgnbu)
  linkgradient =  viridisgradient(_viridis_data)
  backgradient =  ColorGradient([(255,255,255,1.0),(255,255,255,1.0)], [0.0,1.0])
  #backgradient =  ColorGradient([(0,0,255,1.0),(255,255,255,1.0),(255,0,0,1.0)], [0.0,0.5,1.0])
  backlabel = ""

  #drawlegend(string(outfile, ".coevolutionprobability.svg"), linkgradient, ["0.0", "2.5", "5.0", "7.5", "10.0"])
  #exit()
  #backgradient = shapegradient
  #backlabel = "SHAPE reactivity"

  #=
  drawlegend(string(outfile, ".substitutionrate.svg"), backgradient, ["low", "moderate", "high"])
  drawlegend(string(outfile, ".coevolutionprobability.svg"), linkgradient, ["0.00", "0.25", "0.50", "0.75", "1.00"])
  drawlegend(string(outfile, ".shape.svg"), shapegradient, ["0.0", "0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1.0"])=#
  points, minx, miny, maxx, maxy = [], 0.0, 0.0, 0.0, 0.0
  if dosplaystructure
      points, minx, miny, maxx, maxy = splaystructure(paired, 1, 350, 150, visible)
  else
      points, minx, miny, maxx, maxy = get2Dpoints(paired)
  end
  numpoints = length(points)

  scale = 2.0
  radius = 7.5*scale
  xoffset = radius
  yoffset = radius
  width = (maxx-minx)*scale + xoffset*2.0 + 50.0
  height = (maxy-miny)*scale + yoffset*2.0 + 50.0
  #width = 3000
  #height = 1500

  for i=1:numpoints
    points[i][1] = (points[i][1] - minx + xoffset)*scale
    points[i][2] = (points[i][2] - miny + yoffset)*scale
  end

  svgout = open(outfile,"w")
  write(svgout,"""
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" onload="init(evt)" width="$width" height="$height"  style=\"font-family:sans-serif\">
  """
  )
  write(svgout, """
  <defs>
  <marker id="markerSquare" markerWidth="7" markerHeight="7" refX="4" refY="4"
          orient="auto">
      <rect x="1" y="1" width="5" height="5" style="stroke: none; fill:#000000;"/>
  </marker>

  <marker id="markerArrow" markerWidth="13" markerHeight="13" refX="2" refY="7"
          orient="auto">
      <path d="M2,2 L2,13 L8,7 L2,2" style="fill: #000000;" />
  </marker>
</defs>

  <style>
    .caption{
	font-size: 14px;
	font-family: Georgia, serif;
    }
    .tooltip{
	font-size: 12px;
	color: black;
    }
    .tooltip_bg{
	fill: white;
	stroke: black;
	stroke-width: 1;
	opacity: 1.0;
    }
  </style>
  """)
  write(svgout, """
  <script type="text/ecmascript">
    <![CDATA[

	function init(evt)
	{
	    if ( window.svgDocument == null )
	    {
		svgDocument = evt.target.ownerDocument;
	    }

	    tooltip = svgDocument.getElementById('tooltip');
	    tooltip_bg = svgDocument.getElementById('tooltip_bg');

	}

	function ShowTooltip(evt, mouseovertext)
	{
	    var position = document.rootElement.createSVGPoint();
	    position.x = evt.clientX;
	    position.y = evt.clientY;
	    var matrix = document.rootElement.getScreenCTM();
	    var correctPosition=position.matrixTransform(matrix.inverse());
	    var mousex = correctPosition.x;
	    var mousey = correctPosition.y;
	    tooltip.setAttributeNS(null,"x",mousex+4);
	    tooltip.setAttributeNS(null,"y",mousey+14);
	    tooltip.firstChild.data = mouseovertext;
	    tooltip.setAttributeNS(null,"visibility","visible");

	    length = tooltip.getComputedTextLength();
	    tooltip_bg.setAttributeNS(null,"width",length+8);
	    tooltip_bg.setAttributeNS(null,"x",mousex+1);
	    tooltip_bg.setAttributeNS(null,"y",mousey+1);
	    tooltip_bg.setAttributeNS(null,"visibility","visible");
	}

	function HideTooltip(evt)
	{
	    tooltip.setAttributeNS(null,"visibility","hidden");
	    tooltip_bg.setAttributeNS(null,"visibility","hidden");
	}

    ]]>
  </script>
  """)

  for i=1:numpoints
    j = paired[i]
    if j > i && (length(visible) == 0 || (i in visible && j in visible))
      #write(svgout, string("<line id=\"bond_", i,"\" x1=\"", points[i][1], "\" y1=\"",points[i][2],"\"  x2=\"", points[j][1],"\" y2=\"", points[j][2] ,"\" style=\"stroke-width:", 8.0,";stroke:", rgbstring(getcolor(linkgradient, linkvalues[i])),"\""))

      dist = sqrt((points[i][1]-points[j][1])^2.0 + (points[i][2]-points[j][2])^2.0)
      linewidth = 16.0
      if dist > 60.0
        linewidth = 8.0
      end
      #println("DIST=",dist)
      write(svgout, string("<path id=\"bond_", i,"\" d=\"M", points[i][1], ",",points[i][2]," L", points[j][1],",", points[j][2] ,"\" style=\"fill:none;stroke-width:", linewidth,";stroke:", rgbstring(getcolor(linkgradient, linkvalues[i]/maxcoevolutionvalue)),"\""))
      #write(svgout, "/>\n")
      #write(svgout, string(""" cursor="help" onmousemove="ShowTooltip(evt, '""", @sprintf("Posterior probability γ≠0: %0.3f", linkvalues[i]),";  ",@sprintf("posterior probability paired: %0.3f",linkvalues2[i]),"""')" onmouseout="HideTooltip(evt)"/>\n"""))
      write(svgout, string(""" cursor="help" onmousemove="ShowTooltip(evt, '""", @sprintf("Coevolution: %0.3f; ", linkvalues[i]), "p($(startpos+i-1),$(startpos+j-1)): ", @sprintf("%0.3f", linkvalues2[i]),"""')" onmouseout="HideTooltip(evt)"/>\n"""))
    end
  end

  for i=1:numpoints-1
    if (length(visible) == 0 || (i in visible && (i+1) in visible))
      x1 = points[i][1]
      y1 = points[i][2]
      x2 = points[i+1][1]
      y2 = points[i+1][2]
      write(svgout, string("<path id=\"covalent", i, "_", i+1,"\" d=\"M", x1, " ", y1, " L ", x2," ", y2 ,"\" style=\"stroke-width:", 6.0,";stroke:lightgray;fill:none;marker-mid:url(#markerArrow)\"/>\n"))
    end
  end

  minbackvalue = minimum(backvalues)
  maxbackvalue = maximum(backvalues)
  for i=1:numpoints
    if (length(visible) == 0 || (i in visible))
      x = points[i][1]
      y = points[i][2]
      nucbackgroundcolor = "#dd3333"
      nucbackgroundcolor = "#ffffff"
      if !isnan(backvalues[i])
        denominator = maxbackvalue-minbackvalue
        #v = (backvalues[i]-minbackvalue)/(denominator == 0.0 ? 1.0 : denominator)
        v = min(max(0.0, backvalues[i]),1.0)
        nucbackgroundcolor = rgbstring(getcolor(backgradient, v))
      end

      if i == 1 || i == numpoints || (startpos+i-1) % 5 == 0
          if i <= div(numpoints, 2)
              write(svgout, "<path d=\"M$(x-radius-3.0) $(y) L$(x-radius+3.0) $(y)\" style=\"stroke:black;stroke-width:5.0;\"/>")
              #write(svgout, "<text x=\"$(x-radius-3.5)\" y=\"$(y+2.0)\" alignment-baseline=\"middle\" style=\"font-size:18px\" text-anchor=\"end\">$(startpos+i-1)</text>")
              write(svgout, "<text x=\"$(x-radius-3.5)\" y=\"$(y+radius-9.0)\" style=\"font-size:18px\" text-anchor=\"end\">$(startpos+i-1)</text>")

          else
              write(svgout, "<path d=\"M$(x+radius-3.0) $(y) L$(x+radius+3.0) $(y)\" style=\"stroke:black;stroke-width:5.0;\"/>")
              #write(svgout, "<text x=\"$(x+radius+3.5)\" y=\"$(y+2.0)\" alignment-baseline=\"middle\" style=\"font-size:18px\" text-anchor=\"start\">$(startpos+i-1)</text>")
              write(svgout, "<text x=\"$(x+radius+3.5)\" y=\"$(y+radius-9.0)\" style=\"font-size:18px\" text-anchor=\"start\">$(startpos+i-1)</text>")
          end
      end

      if gapfrequency[i] > 0.5
        #<rect x="50" y="20" rx="20" ry="20" width="150" height="150"
        write(svgout, string("<rect id=\"nucleotide_",i,"\" x=\"",x-radius,"\" y=\"",y-radius,"\" width=\"",radius*2.0,"\" height=\"",radius*2.0,"\" rx=\"10.0\" ry=\"10.0\" stroke-dasharray=\"5, 5\" style=\"stroke-width:2;stroke:black;fill:",nucbackgroundcolor,"\" "))
        #write(svgout, string("<circle id=\"nucleotide_",i,"\" cx=\"",x,"\" cy=\"",y,"\" r=\"",radius,"\" stroke-dasharray=\"5, 5\" style=\"stroke-width:2;stroke:black;fill:",nucbackgroundcolor,"\" "))
      else
        write(svgout, string("<rect id=\"nucleotide_",i,"\" x=\"",x-radius,"\" y=\"",y-radius,"\" width=\"",radius*2.0,"\" height=\"",radius*2.0,"\" rx=\"10.0\" ry=\"10.0\" style=\"stroke-width:2;stroke:black;fill:",nucbackgroundcolor,"\" "))
        #write(svgout, string("<circle id=\"nucleotide_",i,"\" cx=\"",x,"\" cy=\"",y,"\" r=\"",radius,"\" style=\"stroke-width:2;stroke:black;fill:",nucbackgroundcolor,"\" "))
      end
      #write(svgout, "/>\n")
      write(svgout, string(""" cursor="help" onmousemove="ShowTooltip(evt, '""","Position ",startpos+i-1," (",get(mapping,i+startpos-1,"NA"),");  $(backlabel): ",@sprintf("%0.2f; gaps: %0.1f%%",backvalues[i], gapfrequency[i]*100.0),"""; $(get(textannotations,i,""))')" onmouseout="HideTooltip(evt)"/>\n"""))
    end
  end


  for i=1:size(data,2)
    if (length(visible) == 0 || (i in visible))
      v = zeros(Float64,4)
      for j=1:size(data,1)
        w = data[j,i,:]/sum(data[j,i,:])
        for k=1:4
          v[k] += w[k]
        end
      end
      v /= sum(v)
      h = zeros(Float64,4)
      for k=1:4
        h[k] -= v[k]*log(v[k])/log(2.0)
      end
      e = (3.0/log(2.0))/size(data,2)
      for k=1:4
        v[k] = v[k]*(2.0 - h[k] - e)
        if isnan(v[k])
          v[k] = 0.0
        end
      end
      v /= 2.0

      #println(h,"\t",v)
      x = points[i][1]
      y = points[i][2]
      logo_offset = 1.0*scale
      logoyoffset = (1.0 - sum(v))*radius
      additionaltags = string(""" cursor="help" onmousemove="ShowTooltip(evt, '""","Position ",startpos+i-1," (",get(mapping,i+startpos-1,"NA"),"); $(backlabel): ",@sprintf("%0.2f; gaps: %0.1f%%",backvalues[i], gapfrequency[i]*100.0),"; $(get(textannotations,i,""))')\" onmouseout=\"HideTooltip(evt)\"")
      #additionaltags = ""

      uselight = false
      if !isnan(backvalues[i])
        backcolor = getcolor(backgradient, min(max(0.0, backvalues[i]),1.0))
        backaverage = (backcolor[1] + backcolor[2] + backcolor[3])/3.0
        if backaverage <= 127.0
          uselight = true
        end
        if isnan(backvalues[i])
          uselight = false
        end
      end
      write(svgout, string(sequencelogo(string("logo",i), x, y-radius+logo_offset+logoyoffset, radius*2.0, radius*2.0-logo_offset*3.0, v, additionaltags, uselight),"\n"))
    end
  end

  write(svgout,"""
  <rect class="tooltip_bg" id="tooltip_bg"
      x="0" y="0" rx="4" ry="4"
      width="55" height="17" visibility="hidden"/>
  <text class="tooltip" id="tooltip"
      x="0" y="0" visibility="hidden">Tooltip</text>
  """)

  write(svgout, "</svg>\n")
  return points
end



function loadReplicationCapacityData(dataset, alignmentfile, infile)
  #sequence, pairedsites = readctfile("/media/michael/Sandisk500GB/data/hiv1-SHAPE-MaP.ct")
  #sequence = "GGTCTCTCTGGTTAGACCAGATCTGAGCCTGGGAGCTCTCTGGCTAACTAGGGAACCCACTGCTTAAGCCTCAATAAAGCTTGCCTTGAGTGCTCAAAGTAGTGTGTGCCCGTCTGTTGTGTGACTCTGGTAACTAGAGATCCCTCAGACCCTTTTAGTCAGTGTGGAAAATCTCTAGCAGTGGCGCCCGAACAGGGACTTGAAAGCGAAAGTAAAGCCAGAGGAGATCTCTCGACGCAGGACTCGGCTTGCTGAAGCGCGCACGGCAAGAGGCGAGGGGCGGCGACTGGTGAGTACGCCAAAAATTTTGACTAGCGGAGGCTAGAAGGAGAGAGATGGGTGCGAGAGCGTCGGTATTAAGCGGGGGAGAATTAGATAAATGGGAAAAAATTCGGTTAAGGCCAGGGGGAAAGAAACAATATAAACTAAAACATATAGTATGGGCAAGCAGGGAGCTAGAACGATTCGCAGTTAATCCTGGCCTTTTAGAGACATCAGAAGGCTGTAGACAAATACTGGGACAGCTACAACCATCCCTTCAGACAGGATCAGAAGAACTTAGATCATTATATAATACAATAGCAGTCCTCTATTGTGTGCATCAAAGGATAGATGTAAAAGACACCAAGGAAGCCTTAGATAAGATAGAGGAAGAGCAAAACAAAAGTAAGAAAAAGGCACAGCAAGCAGCAGCTGACACAGGAAACAACAGCCAGGTCAGCCAAAATTACCCTATAGTGCAGAACCTCCAGGGGCAAATGGTACATCAGGCCATATCACCTAGAACTTTAAATGCATGGGTAAAAGTAGTAGAAGAGAAGGCTTTCAGCCCAGAAGTAATACCCATGTTTTCAGCATTATCAGAAGGAGCCACCCCACAAGATTTAAATACCATGCTAAACACAGTGGGGGGACATCAAGCAGCCATGCAAATGTTAAAAGAGACCATCAATGAGGAAGCTGCAGAATGGGATAGATTGCATCCAGTGCATGCAGGGCCTATTGCACCAGGCCAGATGAGAGAACCAAGGGGAAGTGACATAGCAGGAACTACTAGTACCCTTCAGGAACAAATAGGATGGATGACACATAATCCACCTATCCCAGTAGGAGAAATCTATAAAAGATGGATAATCCTGGGATTAAATAAAATAGTAAGAATGTATAGCCCTACCAGCATTCTGGACATAAGACAAGGACCAAAGGAACCCTTTAGAGACTATGTAGACCGATTCTATAAAACTCTAAGAGCCGAGCAAGCTTCACAAGAGGTAAAAAATTGGATGACAGAAACCTTGTTGGTCCAAAATGCGAACCCAGATTGTAAGACTATTTTAAAAGCATTGGGACCAGGAGCGACACTAGAAGAAATGATGACAGCATGTCAGGGAGTGGGGGGACCCGGCCATAAAGCAAGAGTTTTGGCTGAAGCAATGAGCCAAGTAACAAATCCAGCTACCATAATGATACAGAAAGGCAATTTTAGGAACCAAAGAAAGACTGTTAAGTGTTTCAATTGTGGCAAAGAAGGGCACATAGCCAAAAATTGCAGGGCCCCTAGGAAAAAGGGCTGTTGGAAATGTGGAAAGGAAGGACACCAAATGAAAGATTGTACTGAGAGACAGGCTAATTTTTTAGGGAAGATCTGGCCTTCCCACAAGGGAAGGCCAGGGAATTTTCTTCAGAGCAGACCAGAGCCAACAGCCCCACCAGAAGAGAGCTTCAGGTTTGGGGAAGAGACAACAACTCCCTCTCAGAAGCAGGAGCCGATAGACAAGGAACTGTATCCTTTAGCTTCCCTCAGATCACTCTTTGGCAGCGACCCCTCGTCACAATAAAGATAGGGGGGCAATTAAAGGAAGCTCTATTAGATACAGGAGCAGATGATACAGTATTAGAAGAAATGAATTTGCCAGGAAGATGGAAACCAAAAATGATAGGGGGAATTGGAGGTTTTATCAAAGTAAGACAGTATGATCAGATACTCATAGAAATCTGCGGACATAAAGCTATAGGTACAGTATTAGTAGGACCTACACCTGTCAACATAATTGGAAGAAATCTGTTGACTCAGATTGGCTGCACTTTAAATTTTCCCATTAGTCCTATTGAGACTGTACCAGTAAAATTAAAGCCAGGAATGGATGGCCCAAAAGTTAAACAATGGCCATTGACAGAAGAAAAAATAAAAGCATTAGTAGAAATTTGTACAGAAATGGAAAAGGAAGGAAAAATTTCAAAAATTGGGCCTGAAAATCCATACAATACTCCAGTATTTGCCATAAAGAAAAAAGACAGTACTAAATGGAGAAAATTAGTAGATTTCAGAGAACTTAATAAGAGAACTCAAGATTTCTGGGAAGTTCAATTAGGAATACCACATCCTGCAGGGTTAAAACAGAAAAAATCAGTAACAGTACTGGATGTGGGCGATGCATATTTTTCAGTTCCCTTAGATAAAGACTTCAGGAAGTATACTGCATTTACCATACCTAGTATAAACAATGAGACACCAGGGATTAGATATCAGTACAATGTGCTTCCACAGGGATGGAAAGGATCACCAGCAATATTCCAGTGTAGCATGACAAAAATCTTAGAGCCTTTTAGAAAACAAAATCCAGACATAGTCATCTATCAATACATGGATGATTTGTATGTAGGATCTGACTTAGAAATAGGGCAGCATAGAACAAAAATAGAGGAACTGAGACAACATCTGTTGAGGTGGGGATTTACCACACCAGACAAAAAACATCAGAAAGAACCTCCATTCCTTTGGATGGGTTATGAACTCCATCCTGATAAATGGACAGTACAGCCTATAGTGCTGCCAGAAAAGGACAGCTGGACTGTCAATGACATACAGAAATTAGTGGGAAAATTGAATTGGGCAAGTCAGATTTATGCAGGGATTAAAGTAAGGCAATTATGTAAACTTCTTAGGGGAACCAAAGCACTAACAGAAGTAGTACCACTAACAGAAGAAGCAGAGCTAGAACTGGCAGAAAACAGGGAGATTCTAAAAGAACCGGTACATGGAGTGTATTATGACCCATCAAAAGACTTAATAGCAGAAATACAGAAGCAGGGGCAAGGCCAATGGACATATCAAATTTATCAAGAGCCATTTAAAAATCTGAAAACAGGAAAGTATGCAAGAATGAAGGGTGCCCACACTAATGATGTGAAACAATTAACAGAGGCAGTACAAAAAATAGCCACAGAAAGCATAGTAATATGGGGAAAGACTCCTAAATTTAAATTACCCATACAAAAGGAAACATGGGAAGCATGGTGGACAGAGTATTGGCAAGCCACCTGGATTCCTGAGTGGGAGTTTGTCAATACCCCTCCCTTAGTGAAGTTATGGTACCAGTTAGAGAAAGAACCCATAATAGGAGCAGAAACTTTCTATGTAGATGGGGCAGCCAATAGGGAAACTAAATTAGGAAAAGCAGGATATGTAACTGACAGAGGAAGACAAAAAGTTGTCCCCCTAACGGACACAACAAATCAGAAGACTGAGTTACAAGCAATTCATCTAGCTTTGCAGGATTCGGGATTAGAAGTAAACATAGTGACAGACTCACAATATGCATTGGGAATCATTCAAGCACAACCAGATAAGAGTGAATCAGAGTTAGTCAGTCAAATAATAGAGCAGTTAATAAAAAAGGAAAAAGTCTACCTGGCATGGGTACCAGCACACAAAGGAATTGGAGGAAATGAACAAGTAGATAAATTGGTCAGTGCTGGAATCAGGAAAGTACTATTTTTAGATGGAATAGATAAGGCCCAAGAAGAACATGAGAAATATCACAGTAATTGGAGAGCAATGGCTAGTGATTTTAACCTACCACCTGTAGTAGCAAAAGAAATAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATGCATGGACAAGTAGACTGTAGCCCAGGAATATGGCAGCTAGATTGTACACATTTAGAAGGAAAAGTTATCTTGGTAGCAGTTCATGTAGCCAGTGGATATATAGAAGCAGAAGTAATTCCAGCAGAGACAGGGCAAGAAACAGCATACTTCCTCTTAAAATTAGCAGGAAGATGGCCAGTAAAAACAGTACATACAGACAATGGCAGCAATTTCACCAGTACTACAGTTAAGGCCGCCTGTTGGTGGGCGGGGATCAAGCAGGAATTTGGCATTCCCTACAATCCCCAAAGTCAAGGAGTAATAGAATCTATGAATAAAGAATTAAAGAAAATTATAGGACAGGTAAGAGATCAGGCTGAACATCTTAAGACAGCAGTACAAATGGCAGTATTCATCCACAATTTTAAAAGAAAAGGGGGGATTGGGGGGTACAGTGCAGGGGAAAGAATAGTAGACATAATAGCAACAGACATACAAACTAAAGAATTACAAAAACAAATTACAAAAATTCAAAATTTTCGGGTTTATTACAGGGACAGCAGAGATCCAGTTTGGAAAGGACCAGCAAAGCTCCTCTGGAAAGGTGAAGGGGCAGTAGTAATACAAGATAATAGTGACATAAAAGTAGTGCCAAGAAGAAAAGCAAAGATCATCAGGGATTATGGAAAACAGATGGCAGGTGATGATTGTGTGGCAAGTAGACAGGATGAGGATTAACACATGGAAAAGATTAGTAAAACACCATATGTATATTTCAAGGAAAGCTAAGGACTGGTTTTATAGACATCACTATGAAAGTACTAATCCAAAAATAAGTTCAGAAGTACACATCCCACTAGGGGATGCTAAATTAGTAATAACAACATATTGGGGTCTGCATACAGGAGAAAGAGACTGGCATTTGGGTCAGGGAGTCTCCATAGAATGGAGGAAAAAGAGATATAGCACACAAGTAGACCCTGACCTAGCAGACCAACTAATTCATCTGCACTATTTTGATTGTTTTTCAGAATCTGCTATAAGAAATACCATATTAGGACGTATAGTTAGTCCTAGGTGTGAATATCAAGCAGGACATAACAAGGTAGGATCTCTACAGTACTTGGCACTAGCAGCATTAATAAAACCAAAACAGATAAAGCCACCTTTGCCTAGTGTTAGGAAACTGACAGAGGACAGATGGAACAAGCCCCAGAAGACCAAGGGCCACAGAGGGAGCCATACAATGAATGGACACTAGAGCTTTTAGAGGAACTTAAGAGTGAAGCTGTTAGACATTTTCCTAGGATATGGCTCCATAACTTAGGACAACATATCTATGAAACTTACGGGGATACTTGGGCAGGAGTGGAAGCCATAATAAGAATTCTGCAACAACTGCTGTTTATCCATTTCAGAATTGGGTGTCGACATAGCAGAATAGGCGTTACTCGACAGAGGAGAGCAAGAAATGGAGCCAGTAGATCCTAGACTAGAGCCCTGGAAGCATCCAGGAAGTCAGCCTAAAACTGCTTGTACCAATTGCTATTGTAAAAAGTGTTGCTTTCATTGCCAAGTTTGTTTCATGACAAAAGCCTTAGGCATCTCCTATGGCAGGAAGAAGCGGAGACAGCGACGAAGAGCTCATCAGAACAGTCAGACTCATCAAGCTTCTCTATCAAAGCAGTAAGTAGTACATGTAATGCAACCTATAATAGTAGCAATAGTAGCATTAGTAGTAGCAATAATAATAGCAATAGTTGTGTGGTCCATAGTAATCATAGAATATAGGAAAATATTAAGACAAAGAAAAATAGACAGGTTAATTGATAGACTAATAGAAAGAGCAGAAGACAGTGGCAATGAGAGTGAAGGAGAAGTATCAGCACTTGTGGAGATGGGGGTGGAAATGGGGCACCATGCTCCTTGGGATATTGATGATCTGTAGTGCTACAGAAAAATTGTGGGTCACAGTCTATTATGGGGTACCTGTGTGGAAGGAAGCAACCACCACTCTATTTTGTGCATCAGATGCTAAAGCATATGATACAGAGGTACATAATGTTTGGGCCACACATGCCTGTGTACCCACAGACCCCAACCCACAAGAAGTAGTATTGGTAAATGTGACAGAAAATTTTAACATGTGGAAAAATGACATGGTAGAACAGATGCATGAGGATATAATCAGTTTATGGGATCAAAGCCTAAAGCCATGTGTAAAATTAACCCCACTCTGTGTTAGTTTAAAGTGCACTGATTTGAAGAATGATACTAATACCAATAGTAGTAGCGGGAGAATGATAATGGAGAAAGGAGAGATAAAAAACTGCTCTTTCAATATCAGCACAAGCATAAGAGATAAGGTGCAGAAAGAATATGCATTCTTTTATAAACTTGATATAGTACCAATAGATAATACCAGCTATAGGTTGATAAGTTGTAACACCTCAGTCATTACACAGGCCTGTCCAAAGGTATCCTTTGAGCCAATTCCCATACATTATTGTGCCCCGGCTGGTTTTGCGATTCTAAAATGTAATAATAAGACGTTCAATGGAACAGGACCATGTACAAATGTCAGCACAGTACAATGTACACATGGAATCAGGCCAGTAGTATCAACTCAACTGCTGTTAAATGGCAGTCTAGCAGAAGAAGATGTAGTAATTAGATCTGCCAATTTCACAGACAATGCTAAAACCATAATAGTACAGCTGAACACATCTGTAGAAATTAATTGTACAAGACCCAACAACAATACAAGAAAAAGTATCCGTATCCAGAGGGGACCAGGGAGAGCATTTGTTACAATAGGAAAAATAGGAAATATGAGACAAGCACATTGTAACATTAGTAGAGCAAAATGGAATGCCACTTTAAAACAGATAGCTAGCAAATTAAGAGAACAATTTGGAAATAATAAAACAATAATCTTTAAGCAATCCTCAGGAGGGGACCCAGAAATTGTAACGCACAGTTTTAATTGTGGAGGGGAATTTTTCTACTGTAATTCAACACAACTGTTTAATAGTACTTGGTTTAATAGTACTTGGAGTACTGAAGGGTCAAATAACACTGAAGGAAGTGACACAATCACACTCCCATGCAGAATAAAACAATTTATAAACATGTGGCAGGAAGTAGGAAAAGCAATGTATGCCCCTCCCATCAGTGGACAAATTAGATGTTCATCAAATATTACTGGGCTGCTATTAACAAGAGATGGTGGTAATAACAACAATGGGTCCGAGATCTTCAGACCTGGAGGAGGCGATATGAGGGACAATTGGAGAAGTGAATTATATAAATATAAAGTAGTAAAAATTGAACCATTAGGAGTAGCACCCACCAAGGCAAAGAGAAGAGTGGTGCAGAGAGAAAAAAGAGCAGTGGGAATAGGAGCTTTGTTCCTTGGGTTCTTGGGAGCAGCAGGAAGCACTATGGGCGCAGCGTCAATGACGCTGACGGTACAGGCCAGACAATTATTGTCTGATATAGTGCAGCAGCAGAACAATTTGCTGAGGGCTATTGAGGCGCAACAGCATCTGTTGCAACTCACAGTCTGGGGCATCAAACAGCTCCAGGCAAGAATCCTGGCTGTGGAAAGATACCTAAAGGATCAACAGCTCCTGGGGATTTGGGGTTGCTCTGGAAAACTCATTTGCACCACTGCTGTGCCTTGGAATGCTAGTTGGAGTAATAAATCTCTGGAACAGATTTGGAATAACATGACCTGGATGGAGTGGGACAGAGAAATTAACAATTACACAAGCTTAATACACTCCTTAATTGAAGAATCGCAAAACCAGCAAGAAAAGAATGAACAAGAATTATTGGAATTAGATAAATGGGCAAGTTTGTGGAATTGGTTTAACATAACAAATTGGCTGTGGTATATAAAATTATTCATAATGATAGTAGGAGGCTTGGTAGGTTTAAGAATAGTTTTTGCTGTACTTTCTATAGTGAATAGAGTTAGGCAGGGATATTCACCATTATCGTTTCAGACCCACCTCCCAATCCCGAGGGGACCCGACAGGCCCGAAGGAATAGAAGAAGAAGGTGGAGAGAGAGACAGAGACAGATCCATTCGATTAGTGAACGGATCCTTAGCACTTATCTGGGACGATCTGCGGAGCCTGTGCCTCTTCAGCTACCACCGCTTGAGAGACTTACTCTTGATTGTAACGAGGATTGTGGAACTTCTGGGACGCAGGGGGTGGGAAGCCCTCAAATATTGGTGGAATCTCCTACAGTATTGGAGTCAGGAACTAAAGAATAGTGCTGTTAACTTGCTCAATGCCACAGCCATAGCAGTAGCTGAGGGGACAGATAGGGTTATAGAAGTATTACAAGCAGCTTATAGAGCTATTCGCCACATACCTAGAAGAATAAGACAGGGCTTGGAAAGGATTTTGCTATAAGATGGGTGGCAAGTGGTCAAAAAGTAGTGTGATTGGATGGCCTGCTGTAAGGGAAAGAATGAGACGAGCTGAGCCAGCAGCAGATGGGGTGGGAGCAGTATCTCGAGACCTAGAAAAACATGGAGCAATCACAAGTAGCAATACAGCAGCTAACAATGCTGCTTGTGCCTGGCTAGAAGCACAAGAGGAGGAAGAGGTGGGTTTTCCAGTCACACCTCAGGTACCTTTAAGACCAATGACTTACAAGGCAGCTGTAGATCTTAGCCACTTTTTAAAAGAAAAGGGGGGACTGGAAGGGCTAATTCACTCCCAAAGAAGACAAGATATCCTTGATCTGTGGATCTACCACACACAAGGCTACTTCCCTGATTGGCAGAACTACACACCAGGGCCAGGGGTCAGATATCCACTGACCTTTGGATGGTGCTACAAGCTAGTACCAGTTGAGCCAGATAAGGTAGAAGAGGCCAATAAAGGAGAGAACACCAGCTTGTTACACCCTGTGAGCCTGCATGGAATGGATGACCCTGAGAGAGAAGTGTTAGAGTGGAGGTTTGACAGCCGCCTAGCATTTCATCACGTGGCCCGAGAGCTGCATCCGGAGTACTTCAAGAACTGCTGACATCGAGCTTGCTACAAGGGACTTTCCGCTGGGGACTTTCCAGGGAGGCGTGGCCTGGGCGGGACTGGGGAGTGGCGAGCCCTCAGATGCTGCATATAAGCAGCTGCTTTTTGCCTGTACTGGGTCTCTCTGGTTAGACCAGATCTGAGCCTGGGAGCTCTCTGGCTAACTAGGGAACCCACTGCTTAAGCCTCAATAAAGCTTGCCTTGAGTGCTTCAA"
  #=
  mapping, revmapping = createmapping2("/media/michael/Sandisk500GB/data/NL4-3.fasta", "/media/michael/Sandisk500GB/data/pNL4-3_trunc.fasta")
  for i=1:length(mapping)
    println(i,"\t",mapping[i])
  end=#
  pairs = ["GC", "CG", "AT", "TA", "GT", "TG"]
  sequence, pairedsites = readctfile("/media/michael/Sandisk500GB/data/hiv1-SHAPE-MaP.ct")
  mapping, revmapping = createmapping(alignmentfile, sequence)

  table = readtable(infile)
  len = length(table[1])
  data = Dict{Int,Array{Float64,1}}()
  for i=1:len
    name = table[1][i]
    nuc1 = table[2][i][1]
    nuc2 = table[2][i][end]
    pos = parse(Int,table[2][i][2:end-1])
    rc = table[6][i]
    j = pos - 454
    nuc3 = 0
    nuc4 = 0
    nuc4 = sequence
    if j > 0 && pairedsites[j] != 0
      pair = string(sequence[j],sequence[pairedsites[j]])
      mutpair = string(nuc2,sequence[pairedsites[j]])
      breakspair = !(mutpair in pairs)
      #breakspair = true
      # && !(name != "5’LTR" && name != "3’LTR")
      if breakspair
        index = get(revmapping, j, 0)
        if pairedsites[j] < j && pairedsites[j] > 0
          index = get(revmapping, pairedsites[j], 0)
        end
        println(name, "\t", pos,"\t",j,"\t",nuc1,"->",nuc2, "\t", pair,"\t",mutpair,"\t",breakspair,"\t", rc)
        #index = min(i, pairedsites[i])
        if index > 0
          cur = get(data,index,[])
          push!(cur,rc)
          data[index] = cur
        end
      end
    end
    #println(nuc1,"\t",nuc2,"\t",pos)
  end

  res = zeros(Float64,dataset.numcols)
  for i=1:dataset.numcols
    if i in keys(data)
      res[i] = mean(data[i])
    else
      res[i] = NaN
    end
  end

  #println(res)
  return res
end

function loadUnmappedNL43ShapeReactivities2()
  sequence, paired = readctfile("/media/michael/Sandisk500GB/data/hiv1-SHAPE-MaP.ct")
  shapereactivities = zeros(Float64, length(sequence))
  shapeprobs = zeros(Float64, length(sequence))
  table = readtable("/media/michael/Sandisk500GB/data/NL4-3 SHAPE reactivities.csv")

  vec1 = table[3]
  vec2 = table[4]
  for j=1:length(sequence)
    k = paired[j]
    if j > 0  && k > 0 && j <= length(vec1) && k <= length(vec1) && !isna(vec1[j]) && !isna(vec1[k])
        shapereactivities[j]  =  (vec1[j]+vec1[k])/2.0
    else
      shapereactivities[j] = NaN
    end

    if j > 0  && k > 0 && j <= length(vec2) && k <= length(vec2) && !isna(vec2[j]) && !isna(vec2[k])
      shapeprobs[j]  =  (vec2[j]*vec2[k])
    else
      shapeprobs[j] = NaN
    end
  end

  return shapereactivities,shapeprobs
end

function loadUnmappedNL43ShapeReactivities()
  sequence, paired = readctfile("/media/michael/Sandisk500GB/data/hiv1-SHAPE-MaP.ct")
  shapereactivities = zeros(Float64, length(sequence))
  shapeprobs = zeros(Float64, length(sequence))
  table = readtable("/media/michael/Sandisk500GB/data/NL4-3 SHAPE reactivities.csv")

  vec1 = table[3]
  vec2 = table[4]
  for j=1:length(sequence)
    if isna(vec1[j])
      shapereactivities[j] = NaN
    else
      shapereactivities[j] = vec1[j]
    end

    if isna(vec2[j])
      shapeprobs[j] = NaN
    else
      shapeprobs[j] = vec2[j]
    end
  end

  return shapereactivities,shapeprobs
end

function loadNL43ShapeReactivities(dataset, alignmentfile, sequence)
  table = readtable("/media/michael/Sandisk500GB/data/NL4-3 SHAPE reactivities.csv")
  shapereactivities = zeros(Float64, dataset.numcols)
  shapeprobs = zeros(Float64, dataset.numcols)
  vec1 = table[3]
  #vec1 = loadReplicationCapacityData("/media/michael/Sandisk500GB/data/12977_2014_124_MOESM6_ESM.csv")
  vec2 = table[4]
  sequence2, pairedsites2 = readctfile("/media/michael/Sandisk500GB/data/hiv1-SHAPE-MaP.ct")
  mapping, revmapping = createmapping(alignmentfile, sequence2)
  for i=1:dataset.numcols
    j = get(mapping, i, 0)
    k = 0
    if j > 0 && pairedsites2[j] > j
      k = pairedsites2[j]
    end
    if j > 0  && k > 0 && j <= length(vec1) && k <= length(vec1) && !isna(vec1[j]) && !isna(vec1[k])
        shapereactivities[i]  =  (vec1[j]+vec1[k])/2.0
    else
      shapereactivities[i] = NaN
    end

    if j > 0  && k > 0 && j <= length(vec2) && k <= length(vec2) && !isna(vec2[j]) && !isna(vec2[k])
      shapeprobs[i]  =  (vec2[j]*vec2[k])
    else
      shapeprobs[i] = NaN
    end
  end
  return shapereactivities,shapeprobs,mapping, revmapping
end

function loadNL43ShapeReactivities2(dataset, alignmentfile, ctFile, csvfile)
  sequence, dummy = readctfile(ctFile)
  table = CSV.read(csvfile)
  shapereactivities = zeros(Float64, dataset.numcols)
  shapeprobs = zeros(Float64, dataset.numcols)
  vec1 = table[3]
  #vec1 = loadReplicationCapacityData("/media/michael/Sandisk500GB/data/12977_2014_124_MOESM6_ESM.csv")
  vec2 = table[4]
  sequence2, pairedsites2 = readctfile(ctFile)
  mapping, revmapping = createmapping(alignmentfile, sequence2)
  for i=1:dataset.numcols
    j = get(mapping, i, 0)
    if j > 0 && j <= length(vec1) && !ismissing(vec1[j])
        shapereactivities[i]  =  vec1[j]
    else
      shapereactivities[i] = NaN
    end

    if j > 0 && j <= length(vec2) && !ismissing(vec2[j])
      shapeprobs[i]  = vec2[j]
    else
      shapeprobs[i] = NaN
    end
  end
  return shapereactivities,shapeprobs,mapping, revmapping
end

function loadHCVShapeReactivities(dataset, alignmentfile, sequence)
  table = readtable("/media/michael/Sandisk500GB/data/hcvshape/con1.csv")
  shapereactivities = zeros(Float64, dataset.numcols)
  shapeprobs = zeros(Float64, dataset.numcols)
  vec1 = table[3]
  sequence2, pairedsites2 = readctfile("/media/michael/Sandisk500GB/data/hcvshape/HCV_Con1b_genome_model.ct")
  mapping, revmapping = createmapping(alignmentfile, sequence2)
  for i=1:dataset.numcols
    j = get(mapping, i, 0)
    k = 0
    if j > 0 && pairedsites2[j] > j
      k = pairedsites2[j]
    end
    #if j > 0  && j <= length(vec1)&& !isna(vec1[j]) && vec1[j] != -999.0
      #shapereactivities[i]  =  vec1[j]
    if j > 0  && k > 0 && j <= length(vec1) && k <= length(vec1) && !isna(vec1[j]) && !isna(vec1[k]) && vec1[j] != -999.0  && vec1[k] != -999.0
      shapereactivities[i]  =  (vec1[j]+vec1[k])/2.0
      println(i,"\t",j,"\t",sequence2[j],sequence2[k],"\t",shapereactivities[i])
    else
      shapereactivities[i] = NaN
    end
  end
  return shapereactivities,shapereactivities
end

function loadShapeReactivities(dataset, alignmentfile, sequence2, pairedsites2, csvfile, col::Int=3)
  table = readtable(csvfile)
  shapereactivities = zeros(Float64, dataset.numcols)
  allreactivities = zeros(Float64, dataset.numcols)
  vec1 = table[col]
  mapping, revmapping = createmapping(alignmentfile, sequence2)

  for i=1:dataset.numcols
    j = get(mapping, i, 0)
    k = 0
    if j > 0 && pairedsites2[j] > j
      k = pairedsites2[j]
    end

    if j > 0 && !isna(vec1[j])
      allreactivities[i] = vec1[j]
    else
      allreactivities[i] = NaN
    end

    if j > 0  && k > 0 && j <= length(vec1) && k <= length(vec1) && !isna(vec1[j]) && !isna(vec1[k]) && vec1[j] != -999.0  && vec1[k] != -999.0
      shapereactivities[i]  =  (vec1[j]+vec1[k])/2.0
      println(i,"\t",j,"\t",sequence2[j],sequence2[k],"\t",shapereactivities[i])
    else
      shapereactivities[i] = NaN
    end
  end
  return shapereactivities, allreactivities
end
