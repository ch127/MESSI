using Formatting

#=
function parsetable(infile)
  fout = open("siv.reactivities", "w")
  f = open(infile)
  lines = readlines(f)
  spl = split(strip(lines[1]))
  buffer = []
  for i=1:length(spl)
    push!(buffer, spl[i])
    #write(fout,spl[i],"\t")

    if i+2 < length(spl) &&  isnull(tryparse(Float64,spl[i+2]))
      if length(buffer) == 3
        write(fout,string(buffer[1],",", buffer[2], ",", NaN, ",", buffer[3], "\n"))
      elseif length(buffer) == 4
        write(fout,string(buffer[1],",", buffer[2], ",", buffer[3], ",", buffer[4], "\n"))
      end
      buffer = []
      #write(fout,"\n")
    end
  end
  close(f)
  close(fout)
end
#parsetable("helixdata1.txt")
#exit()

function readhelixfile(infile, len)
  f = open(infile)
  lines = readlines(f)
  close(f)

  pairedsites = zeros(Int,len)
  for line in lines
    spl = split(line)
    s = parse(Int,spl[1])
    e = parse(Int,spl[2])
    l = parse(Int,spl[3])
    for i=1:l
      x = s-1+i
      y = e+1-i
      pairedsites[x] = y
      pairedsites[y] = x
    end
    println(s,"\t",e,"\t",l)
  end
  return pairedsites
end
paired = readhelixfile("siv.helix", 9646)
f = open("siv.ct", "w")
seq = "AGUCGCUCUGCGGAGAGGCUGGCAGAUUGAGCCCUGGGAGGUUCUCUCCAGCACUAGCAGGUAGAGCCUGGGUGUUCCCUGCUAGACUCUCACCAGCACUUGGCCGGUGCUGGGCAGAGUGACUCCACGCUUGCUUGCUUAAAGCCCUCUUCAAUAAAGCUGCCAUUUUAGAAGUAAGCUAGUGUGUGUUCCCAUCUCUCCUAGCCGCCGCCUGGUCAACUCGGUACUCAAUAAUAAGAAGACCCUGGUCUGUUAGGACCCUUUCUGCUUUGGGAAACCGAAGCAGGAAAAUCCCUAGCAGAUUGGCGCCUGAACAGGGACUUGAAGGAGAGUGAGAGACUCCUGAGUACGGCUGAGUGAAGGCAGUAAGGGCGGCAGGAACCAACCACGACGGAGUGCUCCUAUAAAGGCGCGGGUCGGUACCAGACGGCGUGAGGAGCGGGAGAGGAAGAGGCCUCCGGUUGCAGGUAAGUGCAACACAAAAAAGAAAUAGCUGUCUUUUAUCCAGGAAGGGGUAAUAAGAUAGAGUGGGAGAUGGGCGUGAGAAACUCCGUCUUGUCAGGGAAGAAAGCAGAUGAAUUAGAAAAAAUUAGGCUACGACCCAACGGAAAGAAAAAGUACAUGUUGAAGCAUGUAGUAUGGGCAGCAAAUGAAUUAGAUAGAUUUGGAUUAGCAGAAAGCCUGUUGGAGAACAAAGAAGGAUGUCAAAAAAUACUUUCGGUCUUAGCUCCAUUAGUGCCAACAGGCUCAGAAAAUUUAAAAAGCCUUUAUAAUACUGUCUGCGUCAUCUGGUGCAUUCACGCAGAAGAGAAAGUGAAACACACUGAGGAAGCAAAACAGAUAGUGCAGAGACACCUAGUGGUGGAAACAGGAACAACAGAAACUAUGCCAAAAACAAGUAGACCAACAGCACCAUCUAGCGGCAGAGGAGGAAAUUACCCAGUACAACAAAUAGGUGGUAACUAUGUCCACCUGCCAUUAAGCCCGAGAACAUUAAAUGCCUGGGUAAAAUUGAUAGAGGAAAAGAAAUUUGGAGCAGAAGUAGUGCCAGGAUUUCAGGCACUGUCAGAAGGUUGCACCCCCUAUGACAUUAAUCAGAUGUUAAAUUGUGUGGGAGACCAUCAAGCGGCUAUGCAGAUUAUCAGAGAUAUUAUAAACGAGGAGGCUGCAGAUUGGGACUUGCAGCACCCACAACCAGCUCCACAACAAGGACAACUUAGGGAGCCGUCAGGAUCAGAUAUUGCAGGAACAACUAGUUCAGUAGAUGAACAAAUCCAGUGGAUGUACAGACAACAGAACCCCAUACCAGUAGGCAACAUUUACAGGAGAUGGAUCCAACUGGGGUUGCAAAAAUGUGUCAGAAUGUAUAACCCAACAAACAUUCUAGAUGUAAAACAAGGGCCAAAAGAGCCAUUUCAGAGCUAUGUAGACAGGUUCUACAAAAGUUUAAGAGCAGAACAGACAGAUGCAGCAGUAAAGAAUUGGAUGACUCAAACACUGCUGAUUCAAAAUGCUAACCCAGAUUGCAAGCUAGUGCUGAAGGGGCUGGGUGUGAAUCCCACCCUAGAAGAAAUGCUGACGGCUUGUCAAGGAGUAGGGGGGCCGGGACAGAAGGCUAGAUUAAUGGCAGAAGCCCUGAAAGAGGCCCUCGCACCAGUGCCAAUCCCUUUUGCAGCAGCCCAACAGAGGGGACCAAGAAAGCCAAUUAAGUGUUGGAAUUGUGGGAAAGAGGGACACUCUGCAAGGCAAUGCAGAGCCCCAAGAAGACAGGGAUGCUGGAAAUGUGGAAAAAUGGACCAUGUUAUGGCCAAAUGCCCAGACAGACAGGCGGGUUUUUUAGGCCUUGGUCCAUGGGGAAAGAAGCCCCGCAAUUUCCCCAUGGCUCAAGUGCAUCAGGGGCUGAUGCCAACUGCUCCCCCAGAGGACCCAGCUGUGGAUCUGCUAAAGAACUACAUGCAGUUGGGCAAGCAGCAGAGAGAAAAGCAGAGAGAAAGCAGAGAGAAGCCUUACAAGGAGGUGACAGAGGAUUUGCUGCACCUCAAUUCUCUCUUUGGAGGAGACCAGUAGUCACUGCUCAUAUUGAAGGACAGCCUGUAGAAGUAUUACUGGAUACAGGGGCUGAUGAUUCUAUUGUAACAGGAAUAGAGUUAGGUCCACAUUAUACCCCAAAAAUAGUAGGAGGAAUAGGAGGUUUUAUUAAUACUAAAGAAUACAAAAAUGUAGAAAUAGAAGUUUUAGGCAAAAGGAUUAAAGGGACAAUCAUGACAGGGGACACCCCGAUUAACAUUUUUGGUAGAAAUUUGCUAACAGCUCUGGGGAUGUCUCUAAAUUUUCCCAUAGCUAAAGUAGAGCCUGUAAAAGUCGCCUUAAAGCCAGGAAAGGAUGGACCAAAAUUGAAGCAGUGGCCAUUAUCAAAAGAAAAGAUAGUUGCAUUAAGAGAAAUCUGUGAAAAGAUGGAAAAGGAUGGUCAGUUGGAGGAAGCUCCCCCGACCAAUCCAUACAACACCCCCACAUUUGCUAUAAAGAAAAAGGAUAAGAACAAAUGGAGAAUGCUGAUAGAUUUUAGGGAACUAAAUAGGGUCACUCAGGACUUUACGGAAGUCCAAUUAGGAAUACCACACCCUGCAGGACUAGCAAAAAGGAAAAGAAUUACAGUACUGGAUAUAGGUGAUGCAUAUUUCUCCAUACCUCUAGAUGAAGAAUUUAGGCAGUACACUGCCUUUACUUUACCAUCAGUAAAUAAUGCAGAGCCAGGAAAACGAUACAUUUAUAAGGUUCUGCCUCAGGGAUGGAAGGGGUCACCAGCCAUCUUCCAAUACACUAUGAGACAUGUGCUAGAACCCUUCAGGAAGGCAAAUCCAGAUGUGACCUUAGUCCAGUAUAUGGAUGACAUCUUAAUAGCUAGUGACAGGACAGACCUGGAACAUGACAGGGUAGUUUUACAGUCAAAGGAACUCUUGAAUAGCAUAGGGUUUUCUACCCCAGAAGAGAAAUUCCAAAAAGAUCCCCCAUUUCAAUGGAUGGGGUACGAAUUGUGGCCAACAAAAUGGAAGUUGCAAAAGAUAGAGUUGCCACAAAGAGAGACCUGGACAGUGAAUGAUAUACAGAAGUUAGUAGGAGUAUUAAAUUGGGCAGCUCAAAUUUAUCCAGGUAUAAAAACCAAACAUCUCUGUAGGUUAAUUAGAGGAAAAAUGACUCUAACAGAGGAAGUUCAGUGGACUGAGAUGGCAGAAGCAGAAUAUGAGGAAAAUAAAAUAAUUCUCAGUCAGGAACAAGAAGGAUGUUAUUACCAAGAAGGCAAGCCAUUAGAAGCCACGGUAAUAAAGAGUCAGGACAAUCAGUGGUCUUAUAAAAUUCACCAAGAAGACAAAAUACUGAAAGUAGGAAAAUUUGCAAAGAUAAAGAAUACACAUACCAAUGGAGUGAGACUAUUAGCACAUGUAAUACAGAAAAUAGGAAAGGAAGCAAUAGUGAUCUGGGGACAGGUCCCAAAAUUCCACUUACCAGUUGAGAAGGAUGUAUGGGAACAGUGGUGGACAGACUAUUGGCAGGUAACCUGGAUACCGGAAUGGGAUUUUAUCUCAACACCACCGCUAGUAAGAUUAGUCUUCAAUCUAGUGAAGGACCCUAUAGAGGGAGAAGAAACCUAUUAUACAGAUGGAUCAUGUAAUAAACAGUCAAAAGAAGGGAAAGCAGGAUAUAUCACAGAUAGGGGCAAAGACAAAGUAAAAGUGUUAGAACAGACUACUAAUCAACAAGCAGAAUUGGAAGCAUUUCUCAUGGCAUUGACAGACUCAGGGCCAAAGGCAAAUAUUAUAGUAGAUUCACAAUAUGUUAUGGGAAUAAUAACAGGAUGCCCUACAGAAUCAGAGAGCAGGCUAGUUAAUCAAAUAAUAGAAGAAAUGAUUAAAAAGUCAGAAAUUUAUGUAGCAUGGGUACCAGCACACAAAGGUAUAGGAGGAAACCAAGAAAUAGACCACCUAGUUAGUCAAGGGAUUAGACAAGUUCUCUUCUUGGAAAAGAUAGAGCCAGCACAAGAAGAACAUGAUAAAUACCAUAGUAAUGUAAAAGAAUUGGUAUUCAAAUUUGGAUUACCCAGAAUAGUGGCCAGACAGAUAGUAGACACCUGUGAUAAAUGUCAUCAGAAAGGAGAGGCUAUACAUGGGCAGGCAAAUUCAGAUCUAGGGACUUGGCAAAUGGAUUGUACCCAUCUAGAGGGAAAAAUAAUCAUAGUUGCAGUACAUGUAGCUAGUGGAUUCAUAGAAGCAGAGGUAAUUCCACAAGAGACAGGAAGACAGACAGCACUAUUUCUGUUAAAAUUGGCAGGCAGAUGGCCUAUUACACAUCUACACACAGAUAAUGGUGCUAACUUUGCUUCGCAAGAAGUAAAGAUGGUUGCAUGGUGGGCAGGGAUAGAGCACACCUUUGGGGUACCAUACAAUCCACAGAGUCAGGGAGUAGUGGAAGCAAUGAAUCACCACCUGAAAAAUCAAAUAGAUAGAAUCAGGGAACAAGCAAAUUCAGUAGAAACCAUAGUAUUAAUGGCAGUUCAUUGCAUGAAUUUUAAAAGAAGGGGAGGAAUAGGGGAUAUGACUCCAGCAGAAAGAUUAAUUAACAUGAUCACUACAGAACAAGAGAUACAAUUUCAACAAUCAAAAAACUCAAAAUUUAAAAAUUUUCGGGUCUAUUACAGAGAAGGCAGAGAUCAACUGUGGAAGGGACCCGGUGAGCUAUUGUGGAAAGGGGAAGGAGCAGUCAUCUUAAAGGUAGGGACAGACAUUAAGGUAGUACCCAGAAGAAAGGCUAAAAUUAUCAAAGAUUAUGGAGGAGGAAAAGAGGUGGAUAGCAGUUCCCACAUGGAGGAUACCGGAGAGGCUAGAGAGGUGGCAUAGCCUCAUAAAAUAUCUGAAAUAUAAAACUAAAGAUCUACAAAAGGUUUGCUAUGUGCCCCAUUUUAAGGUCGGAUGGGCAUGGUGGACCUGCAGCAGAGUAAUCUUCCCACUACAGGAAGGAAGCCAUUUAGAAGUACAAGGGUAUUGGCAUUUGACACCAGAAAAAGGGUGGCUCAGUACUUAUGCAGUGAGGAUAACCUGGUACUCAAAGAACUUUUGGACAGAUGUAACACCAAACUAUGCAGACAUUUUACUGCAUAGCACUUAUUUCCCUUGCUUUACAGCGGGAGAAGUGAGAAGGGCCAUCAGGGGAGAACAACUGCUGUCUUGCUGCAGGUUCCCGAGAGCUCAUAAGUACCAGGUACCAAGCCUACAGUACUUAGCACUGAAAGUAGUAAGCGAUGUCAGAUCCCAGGGAGAGAAUCCCACCUGGAAACAGUGGAGAAGAGACAAUAGGAGAGGCCUUCGAAUGGCUAAACAGAACAGUAGAGGAGAUAAACAGAGAGGCGGUAAACCACCUACCAAGGGAGCUAAUUUUCCAGGUUUGGCAAAGGUCUUGGGAAUACUGGCAUGAUGAACAAGGGAUGUCACCAAGCUAUGUAAAAUACAGAUACUUGUGUUUAAUACAAAAGGCUUUAUUUAUGCAUUGCAAGAAAGGCUGUAGAUGUCUAGGGGAAGGACAUGGGGCAGGGGGAUGGAGACCAGGACCUCCUCCUCCUCCCCCUCCAGGACUAGCAUAAAUGGAAGAAAGACCUCCAGAAAAUGAAGGACCACAAAGGGAACCAUGGGAUGAAUGGGUAGUGGAGGUUCUGGAAGAACUGAAAGAAGAAGCUUUAAAACAUUUUGAUCCUCGCUUGCUAACUGCACUUGGUAAUCAUAUCUAUAAUAGACAUGGAGACACCCUUGAGGGAGCAGGAGAACUCAUUAGAAUCCUCCAACGAGCGCUCUUCAUGCAUUUCAGAGGCGGAUGCAUCCACUCCAGAAUCGGCCAACCUGGGGGAGGAAAUCCUCUCUCAGCUAUACCGCCCUCUAGAAGCAUGCUAUAACACAUGCUAUUGUAAAAAGUGUUGCUACCAUUGCCAGUUUUGUUUUCUUAAAAAAGGCUUGGGGAUAUGUUAUGAGCAAUCACGAAAGAGAAGAAGAACUCCGAAAAAGGCUAAGGCUAAUACAUCUUCUGCAUCAAACAAGUAAGUAUGGGAUGUCUUGGGAAUCAGCUGCUUAUCGCCAUCUUGCUUUUAAGUGUCUAUGGGAUCUAUUGUACUCUAUAUGUCACAGUCUUUUAUGGUGUACCAGCUUGGAGGAAUGCGACAAUUCCCCUCUUUUGUGCAACCAAGAAUAGGGAUACUUGGGGAACAACUCAGUGCCUACCAGAUAAUGGUGAUUAUUCAGAAGUGGCCCUUAAUGUUACAGAAAGCUUUGAUGCCUGGAAUAAUACAGUCACAGAACAGGCAAUAGAGGAUGUAUGGCAACUCUUUGAGACCUCAAUAAAGCCUUGUGUAAAAUUAUCCCCAUUAUGCAUUACUAUGAGAUGCAAUAAAAGUGAGACAGAUAGAUGGGGAUUGACAAAAUCAAUAACAACAACAGCAUCAACAACAUCAACGACAGCAUCAGCAAAAGUAGACAUGGUCAAUGAGACUAGUUCUUGUAUAGCCCAGGAUAAUUGCACAGGCUUGGAACAAGAGCAAAUGAUAAGCUGUAAAUUCAACAUGACAGGGUUAAAAAGAGACAAGAAAAAAGAGUACAAUGAAACUUGGUACUCUGCAGAUUUGGUAUGUGAACAAGGGAAUAACACUGGUAAUGAAAGUAGAUGUUACAUGAACCACUGUAACACUUCUGUUAUCCAAGAGUCUUGUGACAAACAUUAUUGGGAUGCUAUUAGAUUUAGGUAUUGUGCACCUCCAGGUUAUGCUUUGCUUAGAUGUAAUGACACAAAUUAUUCAGGCUUUAUGCCUAAAUGUUCUAAGGUGGUGGUCUCUUCAUGCACAAGGAUGAUGGAGACACAGACUUCUACUUGGUUUGGCUUUAAUGGAACUAGAGCAGAAAAUAGAACUUAUAUUUACUGGCAUGGUAGGGAUAAUAGGACUAUAAUUAGUUUAAAUAAGUAUUAUAAUCUAACAAUGAAAUGUAGAAGACCAGGAAAUAAGACAGUUUUACCAGUCACCAUUAUGUCUGGAUUGGUUUUCCACUCACAACCAAUCAAUGAUAGGCCAAAGCAGGCAUGGUGUUGGUUUGGAGGAAAAUGGAAGGAUGCAAUAAAAGAGGUGAAGCAGACCAUUGUCAAACAUCCCAGGUAUACUGGAACUAACAAUACUGAUAAAAUCAAUUUGACGGCUCCUGGAGGAGGAGAUCCGGAAGUUACCUUCAUGUGGACAAAUUGCAGAGGAGAGUUCCUCUACUGUAAAAUGAAUUGGUUUCUAAAUUGGGUAGAAGAUAGGAAUACAGCUAACCAGAAGCCAAAGGAACAGCAUAAAAGGAAUUACGUGCCAUGUCAUAUUAGACAAAUAAUCAACACUUGGCAUAAAGUAGGCAAAAAUGUUUAUUUGCCUCCAAGAGAGGGAGACCUCACGUGUAACUCCACAGUGACCAGUCUCAUAGCAAACAUAGAUUGGAUUGAUGGAAACCAAACUAAUAUCACCAUGAGUGCAGAGGUGGCAGAACUGUAUCGAUUGGAAUUGGGAGAUUAUAAAUUAGUAGAGAUCACUCCAAUUGGCUUGGCCCCCACAGAUGUGAAGAGGUACACUACUGGUGGCACCUCAAGAAAUAAAAGAGGGGUCUUUGUGCUAGGGUUCUUGGGUUUUCUCGCAACGGCAGGUUCUGCAAUGGGCGCGGCGUCGUUGACGCUGACCGCUCAGUCCCGAACUUUAUUGGCUGGGAUAGUGCAGCAACAGCAACAGCUGUUGGACGUGGUCAAGAGACAACAAGAAUUGUUGCGACUGACCGUCUGGGGAACAAAGAACCUCCAGACUAGGGUCACUGCCAUCGAGAAGUACUUAAAGGACCAGGCGCAGCUGAAUGCUUGGGGAUGUGCGUUUAGACAAGUCUGCCACACUACUGUACCAUGGCCAAAUGCAAGUCUAACACCAAAGUGGAACAAUGAGACUUGGCAAGAGUGGGAGCGAAAGGUUGACUUCUUGGAAGAAAAUAUAACAGCCCUCCUAGAGGAGGCACAAAUUCAACAAGAGAAGAACAUGUAUGAAUUACAAAAGUUGAAUAGCUGGGAUGUGUUUGGCAAUUGGUUUGACCUUGCUUCUUGGAUAAAGUAUAUACAAUAUGGAGUUUAUAUAGUUGUAGGAGUAAUACUGUUAAGAAUAGUGAUCUAUAUAGUACAAAUGCUAGCUAAGUUAAGGCAGGGGUAUAGGCCAGUGUUCUCUUCCCCACCCUCUUAUUUCCAGCAGACCCAUAUCCAACAGGACCCGGCACUGCCAACCAGAGAAGGCAAAGAAAGAGACGGUGGAGAAGGCGGUGGCAACAGCUCCUGGCCUUGGCAGAUAGAAUAUAUUCAUUUCCUGAUCCGCCAACUGAUACGCCUCUUGACUUGGCUAUUCAGCAACUGCAGAACCUUGCUAUCGAGAGUAUACCAGAUCCUCCAACCAAUACUCCAGAGGCUCUCUGCGACCCUACAGAGGAUUCGAGAAGUCCUCAGGACUGAACUGACCUACCUACAAUAUGGGUGGAGCUAUUUCCAUGAGGCGGUCCAGGCCGUCUGGAGAUCUGCGACAGAGACUCUUGCGGGCGCGUGGGGAGACUUAUGGGAGACUCUUAGGAGAGGUGGAAGAUGGAUACUCGCAAUCCCCAGGAGGAUUAGACAAGGGCUUGAGCUCACUCUCUUGUGAGGGACAGAAAUACAAUCAGGGACAGUAUAUGAAUACUCCAUGGAGAAACCCAGCUGAAGAGAGAGAAAAAUUAGCAUACAGAAAACAAAAUAUGGAUGAUAUAGAUGAGUAAGAUGAUGACUUGGUAGGGGUAUCAGUGAGGCCAAAAGUUCCCCUAAGAACAAUGAGUUACAAAUUGGCAAUAGACAUGUCUCAUUUUAUAAAAGAAAAGGGGGGACUGGAAGGGAUUUAUUACAGUGCAAGAAGACAUAGAAUCUUAGACAUAUACUUAGAAAAGGAAGAAGGCAUCAUACCAGAUUGGCAGGAUUACACCUCAGGACCAGGAAUUAGAUACCCAAAGACAUUUGGCUGGCUAUGGAAAUUAGUCCCUGUAAAUGUAUCAGAUGAGGCACAGGAGGAUGAGGAGCAUUAUUUAAUGCAUCCAGCUCAAACUUCCCAGUGGGAUGACCCUUGGGGAGAGGUUCUAGCAUGGAAGUUUGAUCCAACUCUGGCCUACACUUAUGAGGCAUAUGUUAGAUACCCAGAAGAGUUUGGAAGCAAGUCAGGCCUGUCAGAGGAAGAGGUUAGAAGAAGGCUAACCGCAAGAGGCCUUCUUAACAUGGCUGACAAGAAGGAAACUCGCUGAAACAGCAGGGACUUUCCACAAGGGGAUGUUACGGGGAGGUACUGGGGAGGAGCCGGUCGGGAACGCCCACUUUCUUGAUGUAUAAAUAUCACUGCAUUUCGCUCUGUAUUCAGUCGCUCUGCGGAGAGGCUGGCAGAUUGAGCCCUGGGAGGUUCUCUCCAGCACUAGCAGGUAGAGCCUGGGUGUUCCCUGCUAGACUCUCACCAGCACUUGGCCGGUGCUGGGCAGAGUGACUCCACGCUUGCUUGCUUAAAGCCCUCUUCAAUAAAGCUGCCAUUUUAGAAGUAAAAAAAAAA"
write(f, string(length(paired),"\n"))
for i=1:length(paired)
  write(f,string(i,"\t",seq[i], "\t", i-1,"\t", i+1,"\t",paired[i],"\t",i,"\n"))
end
close(f)
exit()=#

function drawcorrelationci(outfile, mean, lower, upper)
  panelwidth = 186
  panelheight = 32.0
  width = 160
  height = 20
  offsetx = (panelwidth-width)/2.0
  #offsety = (panelheight-height)/4.0
  offsety = 0.0



  svgout = open(outfile,"w")
  write(svgout,"""
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" onload="init(evt)" width="$panelwidth" height="$panelheight">
  """
  )

  write(svgout, string("<rect x=\"",0.0,"\" y=\"",0.0,"\" width=\"",panelwidth,"\" height=\"",panelheight,"\" style=\"fill:white\"/>"))

  x1 = (lower+1.0)/2.0*width
  y1 = height/2.0
  x2 = (upper+1.0)/2.0*width
  y2 = height/2.0

  write(svgout,
  """
  <style>
    background-color: white;
  </style>
  """)

  #xvalues = Float64[-1.0, -0.75, -0.5, -0.25, 0.0, 0.25, 0.5, 0.75, 1.0]
  #xlabels = ["-1.0", "-0.75", "-0.5", "-0.25", "0.0", "0.25", "0.5", "0.75", "1.0"]
  xvalues = Float64[-1.0, -0.5, 0.0, 0.5, 1.0]
  xlabels = ["-1.0", "-0.5", "0.0", "0.5", "1.0"]
  for (xvalue, xlabel) in zip(xvalues,xlabels)
    xcoord = (xvalue+1.0)/2.0*width
    write(svgout, string("<path d=\"M", offsetx + xcoord, " ", offsety + height - 6.0, " L ", offsetx + xcoord," ", offsety + height,"\" style=\"stroke-width:", 1.0,";stroke:black;fill:none;\"/>\n"))
    write(svgout, string("<text x=\"",offsetx + xcoord,"\" y=\"",height/2.0+20.0,"\" style=\"font-size:10;stroke:none;fill:black;text-anchor:middle;font-family:CMU Serif, serif;\">",xlabel,"</text>\n"))
  end
  xvalues = Float64[-0.75, 0.25, 0.25, 0.75]
  for xvalue in xvalues
    xcoord = (xvalue+1.0)/2.0*width
    write(svgout, string("<path d=\"M", offsetx + xcoord, " ", offsety + height - 5.0, " L ", offsetx + xcoord," ", offsety + height-1.0,"\" style=\"stroke-width:", 1.0,";stroke:black;fill:none;\"/>\n"))
  end

  #=
  write(svgout, string("<path d=\"M", offsetx + width/2.0, " ", offsety + height - 7.0, " L ", offsetx + width/2.0," ", offsety + height,"\" style=\"stroke-width:", 1.0,";stroke:black;fill:none;\"/>\n"))
  write(svgout, string("<path d=\"M", offsetx + 0.0, " ", offsety + height - 7.0, " L ", offsetx + 0.0," ", offsety + height,"\" style=\"stroke-width:", 1.0,";stroke:black;fill:none;\"/>\n"))
  write(svgout, string("<path d=\"M", offsetx + width, " ", offsety + height - 7.0, " L ", offsetx + width," ", offsety + height,"\" style=\"stroke-width:", 1.0,";stroke:black;fill:none;\"/>\n"))
  write(svgout, string("<text x=\"",offsetx,"\" y=\"",height/2.0+23.0,"\" style=\"font-size:11;stroke:none;fill:black;text-anchor:middle;font-family:CMU Serif, serif;\">-1.0</text>\n"))
  write(svgout, string("<text x=\"",offsetx + width/2.0,"\" y=\"",height/2.0+23.0,"\" style=\"font-size:11;stroke:none;fill:black;text-anchor:middle;font-family:CMU Serif, serif;\">0.0</text>\n"))
  write(svgout, string("<text x=\"",offsetx + width,"\" y=\"",height/2.0+23.0,"\" style=\"font-size:11;stroke:none;fill:black;text-anchor:middle;font-family:CMU Serif, serif;\">1.0</text>\n"))
  =#

  # horizontal line
  write(svgout, string("<path d=\"M", offsetx + x1, " ", offsety + y1, " L ", offsetx + x2," ",offsety +  y2 ,"\" style=\"stroke-width:", 1.5,";stroke:blue;fill:none;\"/>\n"))

  # vertical bars
  write(svgout, string("<path d=\"M", offsetx + x1, " ", offsety + height/2.0 - 6.0, " L ", offsetx + x1," ", offsety +  height/2.0 + 6.0 ,"\" style=\"stroke-width:", 1.5,";stroke:blue;fill:none;\"/>\n"))
  meanx = (mean+1.0)/2.0*width
  write(svgout, string("<circle cx=\"",offsetx + meanx,"\" cy=\"",offsety + height/2.0,"\" r=\"",2.5,"\" style=\"stroke-width:0;stroke:blue;fill:blue\"/>"))
  #write(svgout, string("<path d=\"M", meanx, " ", height/2.0 - 5.0, " L ", meanx," ", height/2.0 + 5.0 ,"\" style=\"stroke-width:", 3.0,";stroke:black;fill:none;\"/>\n"))
  write(svgout, string("<path d=\"M", offsetx + x2, " ", offsety + height/2.0 - 6.0, " L ", offsetx + x2," ", offsety + height/2.0 + 6.0 ,"\" style=\"stroke-width:", 1.5,";stroke:blue;fill:none;\"/>\n"))


  write(svgout, "</svg>")
  close(svgout)

end

function drawcorrelationcis(outfile,data)
  sectionheight = 32.0
  panelwidth = 750.0
  panelheight = sectionheight*length(data) + 65.0
  width = 240.0
  height = 20.0
  offsetx = 185.0
  #offsety = (panelheight-height)/4.0
  offsety = 0.0



  svgout = open(outfile,"w")
  write(svgout,"""
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" onload="init(evt)" width="$panelwidth" height="$panelheight">
  """
  )

  write(svgout, string("<rect x=\"",0.0,"\" y=\"",0.0,"\" width=\"",panelwidth,"\" height=\"",panelheight,"\" style=\"fill:white\"/>"))


  write(svgout,
  """
  <style>
    background-color: white;
  </style>
  """)

  offsety = 12.0
  write(svgout, string("<text x=\"",offsetx + width + 25,"\" y=\"",offsety,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:start;font-family:CMU Serif, serif;font-weight: bold;\">N</text>\n"))
  write(svgout, string("<text x=\"",offsetx + width + 85,"\" y=\"",offsety,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:start;font-family:CMU Serif, serif;font-weight: bold;\">Spearman's rho</text>\n"))
  write(svgout, string("<text x=\"",offsetx + width + 245,"\" y=\"",offsety,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:start;font-family:CMU Serif, serif;font-weight: bold;\">P-value</text>\n"))
  offsety = 24.0

  c = 1
  for (label, mean, lower, upper, N, pvalue) in data


    xvalues = Float64[-1.0, -0.5, 0.0, 0.5, 1.0]
    xlabels = ["-1.0", "-0.5", "0.0", "0.5", "1.0"]
    if c == length(data)
      for (xvalue, xlabel) in zip(xvalues,xlabels)
        xcoord = (xvalue+1.0)/2.0*width
        if xvalue == 0.0
          write(svgout, string("<path d=\"M", offsetx + xcoord, " ", 24.0, " L ", offsetx + xcoord," ", offsety + height + 5.0,"\" style=\"stroke-width:", 1.0,";stroke:gray;fill:none;\"/>\n"))
        else
          write(svgout, string("<path d=\"M", offsetx + xcoord, " ", 24.0, " L ", offsetx + xcoord," ", offsety + height + 5.0,"\" style=\"stroke-width:", 1.0,";stroke:lightgray;fill:none;\"/>\n"))
        end
        write(svgout, string("<text x=\"",offsetx + xcoord,"\" y=\"",offsety + height + 20.0,"\" style=\"font-size:14;stroke:none;fill:black;text-anchor:middle;font-family:CMU Serif, serif;\">",xlabel,"</text>\n"))
      end
      write(svgout, string("<text x=\"",offsetx + width/2.0,"\" y=\"",offsety + height + 45.0,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:middle;font-family:CMU Serif, serif;\">Spearman's rho (estimate and 95% CI)</text>\n"))

      xvalues = Float64[-0.75, 0.25, 0.25, 0.75]
      for xvalue in xvalues
        xcoord = (xvalue+1.0)/2.0*width
        write(svgout, string("<path d=\"M", offsetx + xcoord, " ", 24.0, " L ", offsetx + xcoord," ", offsety + height-1.0,"\" style=\"stroke-width:", 0.5,";stroke:lightgray;fill:none;\"/>\n"))
      end
    end
    write(svgout, string("<text x=\"",offsetx - 25.0,"\" y=\"",offsety + height/2.0 + 7.0,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:end;font-family:CMU Serif, serif;font-weight: bold;\">",label,"</text>\n"))
    write(svgout, string("<text x=\"",offsetx + width + 25,"\" y=\"",offsety + height/2.0 + 7.0,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:start;font-family:CMU Serif, serif;\">",N,"</text>\n"))
    write(svgout, string("<text x=\"",offsetx + width + 85,"\" y=\"",offsety + height/2.0 + 7.0,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:start;font-family:CMU Serif, serif;\">",string(Formatting.fmt(".2f", mean), " [", Formatting.fmt(".3f", lower),", ",  Formatting.fmt(".3f", upper), "]"),"</text>\n"))
    write(svgout, string("<text x=\"",offsetx + width + 245,"\" y=\"",offsety + height/2.0 + 7.0,"\" style=\"font-size:16;stroke:none;fill:black;text-anchor:start;font-family:CMU Serif, serif;\">",Formatting.fmt(".2e", pvalue),"</text>\n"))
    offsety += sectionheight
    c += 1
  end
  offsety = 24.0
  c = 1
  for (label, mean, lower, upper) in data
    x1 = (lower+1.0)/2.0*width
    y1 = height/2.0
    x2 = (upper+1.0)/2.0*width
    y2 = height/2.0

    # horizontal line
    write(svgout, string("<path d=\"M", offsetx + x1, " ", offsety + y1, " L ", offsetx + x2," ",offsety +  y2 ,"\" style=\"stroke-width:", 1.5,";stroke:blue;fill:none;\"/>\n"))

    # vertical bars
    write(svgout, string("<path d=\"M", offsetx + x1, " ", offsety + height/2.0 - 6.0, " L ", offsetx + x1," ", offsety +  height/2.0 + 6.0 ,"\" style=\"stroke-width:", 1.5,";stroke:blue;fill:none;\"/>\n"))
    meanx = (mean+1.0)/2.0*width
    write(svgout, string("<circle cx=\"",offsetx + meanx,"\" cy=\"",offsety + height/2.0,"\" r=\"",2.5,"\" style=\"stroke-width:0;stroke:blue;fill:blue\"/>"))
    #write(svgout, string("<path d=\"M", meanx, " ", height/2.0 - 5.0, " L ", meanx," ", height/2.0 + 5.0 ,"\" style=\"stroke-width:", 3.0,";stroke:black;fill:none;\"/>\n"))
    write(svgout, string("<path d=\"M", offsetx + x2, " ", offsety + height/2.0 - 6.0, " L ", offsetx + x2," ", offsety + height/2.0 + 6.0 ,"\" style=\"stroke-width:", 1.5,";stroke:blue;fill:none;\"/>\n"))

    offsety += sectionheight
    c += 1
  end

  write(svgout, "</svg>")
  close(svgout)


end


labels = ["A. MI", "B. RNAAlifold MI", "3C. MI with stacking", "D. p(λ ≠ 1)", "E. Posterior mean λ"]

data = [(labels[1], 0.0925906201682589,0.05325656640238396,0.1316377976740889,2459,2.123034283437114e-6), (labels[2], 0.12492875215290271,0.08582360185626725,0.16364957403657254,2459,2.546340245946037e-10), (labels[3], 0.09588874279940211,0.05657420729828625,0.13490636936059366,2459,9.512135466867158e-7), (labels[4], -0.12158808455575525,-0.1603463928048798,-0.08245541261438959,2459,7.299381780603148e-10), (labels[5], -0.0975789536745317,-0.13658110703953685,-0.05827475738112569,2459,6.239165757216897e-7)]
drawcorrelationcis("ci_siv_reactivities.svg", data)
data = [(labels[1], -0.04430741034830354,-0.08368980725335272,-0.004786820665785306,2459,0.014006966873537207), (labels[2], 0.010165679563995857,-0.032922418502358906,0.05321605989477099,2071,0.3219134402297277), (labels[3], -0.016638746468906233,-0.059669663913417575,0.02645389504803676,2071,0.2245862492944959), (labels[4], 0.19121558875446384,0.15284187920008963,0.22901355047121594,2459,5.576122277481019e-22), (labels[5], 0.20269358639479845,0.1644824909763398,0.24029723367071937,2459,1.6286767912004005e-24)]
drawcorrelationcis("ci_siv_shapeprobs.svg", data)

data = [(labels[1],-0.00835059246559677,-0.051405784499513864,0.03473558382309477,2071,0.352047697670587), (labels[2], 0.010165679563995857,-0.032922418502358906,0.05321605989477099,2071,0.3219134402297277), (labels[3], -0.016638746468906233,-0.059669663913417575,0.02645389504803676,2071,0.2245862492944959), (labels[4], -0.16033540686092487,-0.2020139331100315,-0.11807719364950296,2071,1.0702942636738892e-13), (labels[5], -0.13772482635560754,-0.17973228000224306,-0.09521599545222709,2071,1.5484932751747227e-10)]
drawcorrelationcis("ci_hiv_reactivities.svg", data)
data = [(labels[1], 0.11128647279320132,0.06854134475436727,0.15362375674468276,2071,1.915474359606928e-7), (labels[2], 0.012746346401585416,-0.03034399564521968,0.05578939845235685,2071,0.28104594498198193), (labels[3], 0.10204933268810663,0.059236030765665235,0.1444878980477237,2071,1.6322559417227562e-6), (labels[4], 0.18848570747149462,0.14660225575574046,0.2296945516599804,2071,2.5723345270279264e-18), (labels[5], 0.20335750003627315,0.1617002075535204,0.24429134729602295,2071,4.522011409296194e-21)]
drawcorrelationcis("ci_hiv_shapeprobs.svg", data)


data = [(labels[1],0.02708704727893106,-0.016005308957035173,0.07007896564590044,2071,0.1089435920623208), (labels[2], 0.030038196105838286,-0.013052374002771655,0.07301740433997782,2071,0.08589598137226874), (labels[3], 5.153895314078381e-6,-0.04306853788571427,0.04307882655186451,2071,0.49990648669125926), (labels[4], -0.18373482650664436,-0.22502760972528954,-0.14178323603251103,2071,1.754393191436119e-17), (labels[5], -0.1552366589021849,-0.1969931240396685,-0.11291801592648894,2071,6.086940477261695e-13)]
drawcorrelationcis("ci_hiv_groupm_reactivities.svg", data)
data = [(labels[1], 0.08947321677991592,0.04657904745637515,0.13203803222620097,2071,2.2762201598071346e-5), (labels[2], 0.07626388035873057,0.033299586152032025,0.1189468262809846,2071,0.00025676369834648645), (labels[3], 0.12354300865522078,0.08089983102679703,0.16573474135535426,2071,8.480291587860366e-9), (labels[4], 0.2677139354925763,0.2272608952377058,0.30724464909001986,2071,1.2600431456100608e-35), (labels[5], 0.29090379086495227,0.25097489877775686,0.3298444243375929,2071,5.638909669081286e-42)]
drawcorrelationcis("ci_hiv_groupm_shapeprobs.svg", data)
